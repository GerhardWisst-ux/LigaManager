@page "/editspieltag/{id}"
@page "/createspieltag/{SpieltagNr}"
@using LigaManagerManagement.Models

@inherits EditSpieltagBase
@inject LigaManagement.Web.Services.Contracts.ISpieltagService _SpieltagService
@inject LigaManagement.Web.Services.Contracts.IVereineService _VereineService
@inject NavigationManager _navigationManager

<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
</head>

<div class="row my-2">
    <div class="col-12">
        <EditForm Model="Spiel" OnValidSubmit="Upsert">
            <DataAnnotationsValidator />
            <!-- This will show any validation errors -->
            <ValidationSummary />
            <div style="width:100%" class="card">
                <div class="card-body">
                    <h2 class="card-title">@Titel Spiel</h2>
                    <h3 class="card-title">@SpieltagNr .Spieltag Saison @Globals.currentSaison</h3>
                    <a href="@($"spieltage/{SpieltagNr}")" class="card-link"><span class="glyphicon glyphicon-arrow-left"></span>Zurück</a>
                </div>
            </div>
            <div class="tabs">
                <details open name="tab">
                    <summary> Spielinfo</summary>
                    <div class="content">
                        <div class="form-group row">
                            <label class="col-sm-2">Verein 1</label>
                            <select id="cboVerein1" class="form-control col-sm-10" @onchange="Verein1Change">
                                <option value="" selected>@Vereinsname1</option>
                                @foreach (var verein in VereineList.OrderBy(x => x.Vereinname1))
                                {
                                    <option selected value="@verein.VereinID"> @verein.Vereinname1 </option>

                                }
                                @if (Id is null)
                                {
                                    <option value="" selected required>Verein wählen</option>
                                }
                                else
                                {
                                    <option selected="selected">@Spiel.Verein1</option>
                                }
                            </select>

                            <InputText style="display:none;" id="txtVerein1_Nr" @bind-Value="Spiel.Verein1_Nr" class="form-control col-sm-10"></InputText>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-2">Tore 1</label>
                            <InputNumber required id="txTore1" @bind-Value="Spiel.Tore1_Nr" class="form-control col-sm-10"></InputNumber>  
                            <ValidationMessage class="col-sm-10" For="(()=>Spiel.Tore1_Nr)"></ValidationMessage>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-2">Tore 2</label>
                            <InputNumber required id="ttxTore2" @bind-Value="Spiel.Tore2_Nr" class="form-control col-sm-10"></InputNumber>    
                            <ValidationMessage class="col-sm-10" For="(()=>Spiel.Tore2_Nr)"></ValidationMessage>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-2">Verein 2</label>
                            <select id="cboVerein2" class="form-control col-sm-10" @onchange="Verein2Change">
                                <option value="" selected>@Vereinsname2</option>
                                @foreach (var verein in VereineList.OrderBy(x => x.Vereinname1))
                                {
                                    <option value="@verein.VereinID"> @verein.Vereinname1 </option>

                                }
                                @if (Id is null)
                                {
                                    <option value="" selected >Verein wählen</option>
                                }
                                else
                                {
                                    <option selected="selected">@Spiel.Verein2</option>
                                }
                            </select>
                            <InputText style="display:none;" id="txtVerein2Nr" @bind-Value="Spiel.Verein2_Nr" class="form-control col-sm-10"></InputText>
                        </div>
                        <div class="form-group row">
                            <label for="txtDatum" class="col-sm-2">Datum:</label>
                            <InputDate required id="txtDatum" @bind-Value="Spiel.Datum" class="form-control col-sm-2"></InputDate>
                            <ValidationMessage class="offset-sm-3 col-sm-8" For="(()=>Spiel.Datum)"></ValidationMessage>
                            <input id="txtZeit" type="time" class="form-control col-sm-2" required @bind-value="Time" />                            
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-2">Ort</label>
                            <select id="cboStadion" class="form-control col-sm-10" @onchange="StadionChange">
                                <option value="" selected>@Stadion</option>
                                @foreach (var verein in VereineList.OrderBy(x => x.Ort))
                                {
                                    <option selected value="@verein.VereinID"> @verein.Ort </option>

                                }
                                @if (Id is null)
                                {
                                    <option value="" selected >Stadion wählen</option>
                                }
                                else
                                {
                                    <option selected="selected">@Spiel.Ort</option>
                                }
                            </select>                            
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-2">Schiedrichter</label>
                            <InputText required id="txtSchiedrichter" @bind-Value="Spiel.Schiedrichter" class="form-control col-sm-10"></InputText>
                            <ValidationMessage For="()=>Spiel.Schiedrichter"></ValidationMessage>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-2">Zuschauer</label>
                            <InputNumber required id="txtSchiedrichter" @bind-Value="Spiel.Zuschauer" class="form-control col-sm-10"></InputNumber>                           
                        </div>
                        <div class="form-group py-2">
                            <button data-toggle="Speichert Spieltag ab" class="btn btn-primary"><span class="glyphicon glyphicon-save"></span>Speichern</button>                            
                        </div>
                    </div>
                </details>

                <details name="tab">
                    <summary> Aufstellungen</summary>
                    <div style="width:100%" class="content card">
                        <div class="form-group row">
                            <label class="col-sm-2">Kader Verein 1</label>
                            <select id="cboKader" class="form-control col-sm-4" @onchange="KaderChange1">
                                <option value="" selected>@Spielername</option>
                                <option value="" selected Spieler wählen</option>
                                @foreach (var spieler in KaderList1.OrderBy(x => x.Spielername))
                                {
                                    <option selected value="@spieler.SpielerID"> @spieler.Spielername </option>

                                }
                            </select>
                            <label class="col-sm-2">Kader Verein 2</label>
                            <select id="cboKader2" class="form-control col-sm-4" @onchange="KaderChange2">
                                <option value="" selected>@Spielername</option>
                                <option value="" selected >Spieler wählen</option>
                                @foreach (var spieler in KaderList2.OrderBy(x => x.Spielername))
                                {
                                    <option selected value="@spieler.SpielerID"> @spieler.Spielername </option>

                                }
                            </select>
                            <InputText style="display:none;" id="txtSpieler" @bind-Value="Spiel.Verein1_Nr" class="form-control col-sm-10"></InputText>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-2">Spieler Verein 1</label>
                            <select id="cboSpieler1" class="form-control col-sm-4" @onchange="KaderChange1">
                                <option value="" selected>@Spielername</option>
                                <option value="" selected >Spieler wählen</option>
                                @foreach (var spieler in SpielerList1.OrderBy(x => x.Spielername))
                                {
                                    <option selected value="@spieler.SpielerID"> @spieler.Spielername </option>

                                }
                            </select>
                            <label class="col-sm-2">Spieler Verein 2</label>
                            <select id="cboSpieler2" class="form-control col-sm-4" @onchange="KaderChange2">
                                <option value="" selected>@Spielername</option>
                                <option value="" selected >Spieler wählen</option>
                                @foreach (var spieler in SpielerList2.OrderBy(x => x.Spielername))
                                {
                                    <option selected value="@spieler.SpielerID"> @spieler.Spielername </option>

                                }
                            </select>
                            <InputText style="display:none;" id="txtSpieler" @bind-Value="Spiel.Verein1_Nr" class="form-control col-sm-10"></InputText>

                            <div class="form-group-row py-2">
                                <button onclick="SpeichernSpieler" class="btn btn-primary"><span class="glyphicon glyphicon-save"></span>Speichern</button>
                                <NavLink href="@($"spieltage/{SpieltagNr}")" class="btn btn-secondary"><span class="glyphicon glyphicon-arrow-left"></span>Zurück</NavLink>
                            </div>
                        </div>
                    </div>
                </details>
                <details name="tab">
                    <summary> Tore</summary>
                    <div class="content">
                    </div>
                </details>
                <details name="tab" open>
                    <summary> Spielverlauf </summary>
                    <div class="content">
                    </div>
                </details>
            </div>
        </EditForm>
    </div>
</div>

@code {

    private string Titel { get; set; }
    public bool IsLoading { get; set; }
    public IEnumerable<Verein> VereineMax { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id == "0" || Id is null)
            {
                //Neuanlage
                Titel = "Neuanlage";
                Id = "0";
                IsLoading = false;
            }
            else
            {
                //Bearbeiten
                Titel = "Bearbeiten";
                await LoadSpiel();
            }
        }
    }

    private async Task LoadSpiel()
    {
        IsLoading = true;
        StateHasChanged();
        Spiel = await _SpieltagService.GetSpieltag(Convert.ToInt32(Id));
        IsLoading = false;
        StateHasChanged();
    }
    private async Task Upsert()
    {
        string[] subs = Time.Value.ToString().Split(':');
        int spieldatetime = Convert.ToInt32(subs[0].Substring(11, 2)) * 60 + (Convert.ToInt32(subs[1].Substring(0, 2)));
        DateTime SpielDateTime = Spiel.Datum.Date.AddMinutes(spieldatetime);

        if (Id == "0")
        {
            if (Ligamanager.Components.Globals.currentLiga == "Bundesliga")
                Spiel.LigaID = 1;
            else if (Ligamanager.Components.Globals.currentLiga == "2. Bundesliga")
                Spiel.LigaID = 2;
            else if (Ligamanager.Components.Globals.currentLiga == "3. Liga")
                Spiel.LigaID = 3;

            Spiel.Saison = Globals.currentSaison;
            Spiel.SaisonID = Globals.SaisonID;
            Spiel.SpieltagNr = SpieltagNr;

            Spiel.Datum = SpielDateTime;
            await _SpieltagService.CreateSpieltag(Spiel);


            // for (int i = 0; i < SpielerList1.Count(); i++)
            // {
            //     SpielerSpieltag spielerspieltag = new SpielerSpieltag();
            //     spielerspieltag.KaderId = SpielerList1[i].SpielerID;
            //     spielerspieltag.SaisonId = Globals.SaisonID;
            //     spielerspieltag.SpieltagId = Globals.Spieltag;
            //     spielerspieltag.Tore = 0;
            //     spielerspieltag.Einsatz = 1;
            //     spielerspieltag.Tore = 0;
            //     spielerspieltag.Spielminuten = 90;
            //     spielerspieltag.Eingewechselt = false;
            //     spielerspieltag.Ausgewechselt = false;
            //     var erg = SpielerSpieltagService.CreateSpieler(spielerspieltag);
            // }

            // for (int i = 0; i < SpielerList2.Count(); i++)
            // {
            //     SpielerSpieltag spielerspieltag = new SpielerSpieltag();
            //     spielerspieltag.KaderId = SpielerList2[i].SpielerID;
            //     spielerspieltag.SaisonId = Globals.SaisonID;
            //     spielerspieltag.SpieltagId = Globals.Spieltag;
            //     spielerspieltag.Tore = 0;
            //     spielerspieltag.Einsatz = 1;
            //     spielerspieltag.Tore = 0;
            //     spielerspieltag.Spielminuten = 90;
            //     spielerspieltag.Eingewechselt = false;
            //     spielerspieltag.Ausgewechselt = false;
            //     SpielerSpieltag spieler = await SpielerSpieltagService.CreateSpieler(spielerspieltag);
            // }
        }
        else
        {
            //update
            Spiel.Datum = SpielDateTime;
            await _SpieltagService.UpdateSpieltag(Spiel);

            // for (int i = 0; i < SpielerList1.Count(); i++)
            // {
            //     SpielerSpieltag spielerspieltag = new SpielerSpieltag();
            //     spielerspieltag.KaderId = SpielerList1[i].SpielerID;
            //     spielerspieltag.SaisonId = Globals.SaisonID;
            //     spielerspieltag.SpieltagId = Globals.Spieltag;
            //     spielerspieltag.Tore = 0;
            //     spielerspieltag.Einsatz = 1;
            //     spielerspieltag.Tore = 0;
            //     spielerspieltag.Spielminuten = 90;
            //     spielerspieltag.Eingewechselt = false;
            //     spielerspieltag.Ausgewechselt = false;
            //     var erg = SpielerSpieltagService.CreateSpieler(spielerspieltag);
            // }

            // for (int i = 0; i < SpielerList2.Count(); i++)
            // {
            //     SpielerSpieltag spielerspieltag = new SpielerSpieltag();
            //     spielerspieltag.KaderId = SpielerList2[i].SpielerID;
            //     spielerspieltag.SaisonId = Globals.SaisonID;
            //     spielerspieltag.SpieltagId = Globals.Spieltag;
            //     spielerspieltag.Tore = 0;
            //     spielerspieltag.Einsatz = 1;
            //     spielerspieltag.Tore = 0;
            //     spielerspieltag.Spielminuten = 90;
            //     spielerspieltag.Eingewechselt = false;
            //     spielerspieltag.Ausgewechselt = false;
            //     SpielerSpieltag spieler = await SpielerSpieltagService.CreateSpieler(spielerspieltag);
            // }
        }
        string url = "/spieltage/" + SpieltagNr;

        _navigationManager.NavigateTo(url);
    }
}

