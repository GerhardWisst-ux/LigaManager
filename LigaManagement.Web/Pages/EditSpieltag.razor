@page "/editspieltag/{id}"
@page "/createspieltag/{SpieltagNr}"
@using LigaManagerManagement.Models

@inherits EditSpieltagBase
@inject LigaManagement.Web.Services.Contracts.ISpieltagService _SpieltagService
@inject LigaManagement.Web.Services.Contracts.IVereineService _VereineService
@inject LigaManagement.Web.Services.Contracts.IToreService _ToreService
@inject NavigationManager _navigationManager
@inject NotificationService NotificationService

<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
</head>

<style type="text/css">

    details {
        border: 1px solid #aaa;
        border-radius: 4px;
        padding: 0.5em 0.5em 0;
        width: 100%;
        margin-bottom: 0.5rem;
    }

    summary {
        font-weight: bold;
        margin: -0.5em -0.5em 0;
        padding: 0.5em;
    }

    details[open] {
        padding: 0.5em;
    }

    .CardTore {
        padding: 0;
        margin: 0;
    }

</style>
<div class="row my-2">
    <div class="col-12">
        <EditForm Model="Spiel" OnValidSubmit="Upsert">
            <DataAnnotationsValidator />
            <!-- This will show any validation errors -->
            <ValidationSummary />
            <RadzenCard class="m-0 mb-3 rz-shadow-3">
                <div class="d-flex flex-row">
                    <div class="card-body">
                        <h2 class="card-title">@Titel Spiel</h2>
                        <h3 class="card-title">@SpieltagNr .Spieltag Saison @Globals.currentSaison</h3>
                        <a href="@($"spieltage/{SpieltagNr}")" class="card-link"><span class="glyphicon glyphicon-arrow-left"></span>Zurück</a>
                    </div>
                </div>
            </RadzenCard>

            <RadzenTabs>
                <Tabs>
                    <RadzenTabsItem Text="Spielinfo">
                        <div class="content">
                            <div class="form-group row">
                                <RadzenLabel Text="Label" class="col-sm-3" Component="cboVerein1">Verein 1</RadzenLabel>
                                <select id="cboVerein1" class="form-control col-sm-9" @onchange="Verein1Change">
                                    <option value="" selected required>Verein wählen</option>
                                    @foreach (var verein in VereineList.OrderBy(x => x.Vereinname1))
                                    {
                                        @if (verein.VereinID == Spiel.Verein1_Nr)
                                        {
                                            <option selected value="@verein.VereinID"> @verein.Vereinname1 </option>
                                        }
                                        else
                                        {
                                            <option value="@verein.VereinID"> @verein.Vereinname1 </option>
                                        }
                                    }                                  
                                </select>
                                <InputText style="display:none;" id="txtVerein1_Nr" @bind-Value="Spiel.Verein1_Nr" class="form-control col-sm-9"></InputText>
                            </div>
                            <div class="form-group row">
                                <RadzenLabel Text="Label" class="col-sm-3" Component="txtTore1">Tore 1</RadzenLabel>
                                @* <InputNumber required id="txtTore1" @bind-Value="Spiel.Tore1_Nr" class="form-control col-sm-9"></InputNumber> *@
                                <RadzenNumeric style="display: block" Name="txtTore1" @bind-Value=@Spiel.Tore1_Nr class="form-control col-sm-9" />
                                <ValidationMessage For="@(() => Spiel.Tore1_Nr)" />
                            </div>
                            <div class="form-group row">
                                <RadzenLabel Text="Label" class="col-sm-3" Component="txtTore2">Tore 2</RadzenLabel>
                                @* <InputNumber required id="txtTore2" @bind-Value="Spiel.Tore2_Nr" class="form-control col-sm-9"></InputNumber> *@
                                <RadzenNumeric style="display: block" Name="txtTore2" @bind-Value=@Spiel.Tore2_Nr class="form-control col-sm-9" />
                                @* <RadzenNumericRangeValidator Component="txtTore2" Min="1" Max="20" Text="Tore 2 darf nicht größer als 20 sein" Style="position: absolute" /> *@
                                <ValidationMessage For="@(() => Spiel.Tore2_Nr)" />
                            </div>
                            <div class="form-group row">
                                <RadzenLabel Text="Label" class="col-sm-3" Component="cboVerein2">Verein 2</RadzenLabel>
                                <select id="cboVerein1" class="form-control col-sm-9" @onchange="Verein1Change">
                                    <option value="" selected required>Verein wählen</option>
                                    @foreach (var verein in VereineList.OrderBy(x => x.Vereinname1))
                                    {
                                        @if (verein.VereinID == Spiel.Verein2_Nr)
                                        {
                                            <option selected value="@verein.VereinID"> @verein.Vereinname1 </option>
                                        }
                                        else
                                        {
                                            <option value="@verein.VereinID"> @verein.Vereinname1 </option>
                                        }
                                    }
                                </select>
                                <InputText style="display:none;" id="txtVerein2Nr" @bind-Value="Spiel.Verein2_Nr" class="form-control col-sm-9"></InputText>
                            </div>
                            <div class="form-group row">
                                <RadzenLabel Text="Datum" class="col-sm-3" Component="txtDatum">Datum</RadzenLabel>
                                <InputDate required id="txtDatum" @bind-Value="Spiel.Datum" class="form-control col-sm-3"></InputDate>
                                <ValidationMessage class="offset-sm-3 col-sm-8" For="(()=>Spiel.Datum)"></ValidationMessage>
                                <input id="txtZeit" type="time" class="form-control col-sm-3" required @bind-value="Time" />
                            </div>
                            <div class="form-group row">
                                <RadzenLabel Text="Ort" class="col-sm-3" Component="cboStadion">Ort</RadzenLabel>
                                <select id="cboStadion" bind-value="@Spiel.Ort" class="form-control col-sm-9" @onchange="StadionChange">
                                    @foreach (var verein in VereineList.OrderBy(x => x.Ort))
                                    {
                                        <option value="@verein.VereinID"> @verein.Ort </option>

                                    }
                                    @if (Id is null)
                                    {
                                        <option value="" selected>Stadion wählen</option>
                                    }
                                    else
                                    {
                                        <option selected="selected">@Spiel.Ort</option>
                                    }
                                </select>
                                <InputText style="display:none;" id="txtOrt" @bind-Value="Spiel.Ort" class="form-control col-sm-9"></InputText>
                                <ValidationMessage For="()=>Spiel.Ort"></ValidationMessage>
                            </div>
                            <div class="form-group row">
                                <RadzenLabel Text="Schiedrichter" class="col-sm-3" Component="txtSchiedrichter">Schiedrichter</RadzenLabel>
                                <RadzenTextBox required id="txtSchiedrichter" @bind-Value="Spiel.Schiedrichter" class="form-control col-sm-9"></RadzenTextBox>
                                <ValidationMessage For="()=>Spiel.Schiedrichter"></ValidationMessage>

                            </div>
                            <div class="form-group row">
                                <RadzenLabel Text="Zuschauer" class="col-sm-3" Component="txtZuschauer">Zuschauer</RadzenLabel>
                                <RadzenNumeric style="display: block" Name="txtZuschauer" @bind-Value=@Spiel.Zuschauer class="form-control col-sm-9" />
                                @* <RadzenNumericRangeValidator Component="txtZuschauer" Min="100" Max="1000000" Text="Zuschauer zwischen 100 und 100000" Style="position: absolute" /> *@
                                <ValidationMessage For="()=>Spiel.Zuschauer"></ValidationMessage>
                            </div>
                            <div class="form-group py-2">
                                <RadzenButton title="Speichert Spieltag ab" style="margin-left:5px;" id="btnSpeichern" Click="Upsert" class="btn btn-primary" Text="Speichern">
                                    <span class="glyphicon glyphicon-save"></span>Speichern
                                </RadzenButton>

                                <RadzenButton title="Zurück zu Spieltagsübersicht" style="margin-left:5px;" Click="Zurueck_Click" id="btnSpeichern" class="btn btn-secodary" Text="Zurück">
                                </RadzenButton>
                            </div>
                        </div>
                    </RadzenTabsItem>
                    <RadzenTabsItem Text="Aufstellungen">
                        <div style="width:100%" class="content card">
                            <div class="form-group row">
                                <label class="col-sm-3">Kader Verein 1</label>
                                <select id="cboKader" class="form-control col-sm-4" @onchange="KaderChange1">
                                    <option value="" selected>@Spielername</option>
                                    <option value="" selected Spieler wählen></option>
                                    @foreach (var spieler in KaderList1.OrderBy(x => x.Spielername))
                                    {
                                        <option selected value="@spieler.SpielerID"> @spieler.Spielername </option>

                                    }
                                </select>
                                <label class="col-sm-3">Kader Verein 2</label>
                                <select id="cboKader2" class="form-control col-sm-4" @onchange="KaderChange2">
                                    <option value="" selected>@Spielername</option>
                                    @foreach (var spieler in KaderList2.OrderBy(x => x.Spielername))
                                    {
                                        <option selected value="@spieler.SpielerID"> @spieler.Spielername </option>

                                    }
                                    <option value="" selected>Spieler wählen</option>
                                </select>
                                <InputText style="display:none;" id="txtSpieler" @bind-Value="Spiel.Verein1_Nr" class="form-control col-sm-9"></InputText>
                            </div>
                            <div class="form-group row">
                                <RadzenLabel Text="Spieler Verein 1" class="col-sm-3 pl-0" Component="chkSpielerVerein1">Spieler Verein 1</RadzenLabel>
                                <select id="cboSpieler1" class="form-control col-sm-4" @onchange="KaderChange1">
                                    <option value="" selected>@Spielername</option>
                                    @foreach (var spieler in SpielerList1.OrderBy(x => x.Spielername))
                                    {
                                        <option selected value="@spieler.SpielerID"> @spieler.Spielername </option>

                                    }
                                    <option value="" selected>Spieler wählen</option>
                                </select>
                                <RadzenLabel Text="Spieler Verein 2" class="col-sm-3 pl-0" Component="chkSpielerVerein1">Spieler Verein 2</RadzenLabel>
                                <select id="cboSpieler2" class="form-control col-sm-4" @onchange="KaderChange2">
                                    <option value="" selected>@Spielername</option>
                                    @foreach (var spieler in SpielerList2.OrderBy(x => x.Spielername))
                                    {
                                        <option selected value="@spieler.SpielerID"> @spieler.Spielername </option>

                                    }
                                    <option value="" selected>Spieler wählen</option>
                                </select>
                                <InputText style="display:none;" id="txtSpieler" @bind-Value="Spiel.Verein1_Nr" class="form-control col-sm-9"></InputText>
                                <div class="form-group-row py-2">
                                    <button onclick="SpeichernSpieler" class="btn btn-primary"><span class="glyphicon glyphicon-save"></span>Speichern</button>
                                    <NavLink href="@($"spieltage/{SpieltagNr}")" class="btn btn-secondary"><span class="glyphicon glyphicon-arrow-left"></span>Zurück</NavLink>
                                </div>
                            </div>
                        </div>
                    </RadzenTabsItem>
                    <RadzenTabsItem Text="Tore">
                        <div class="form-group row">
                            <details open>
                                <summary>Übersicht Spielverlauf</summary>
                                <p>
                                    @if (ToreList != null)
                                    {

                                        var ToreList2 = ToreList.Sort("Spielstand", BootstrapBlazor.Components.SortOrder.Asc);

                                        <RadzenDataList AllowVirtualization=@allowVirtualization Style="@(allowVirtualization ? "height:700px;overflow:auto;" : ";")"
                                                        WrapItems="@(!allowVirtualization)" AllowPaging="@(!allowVirtualization)"
                                                        Data="@ToreList2" TItem="DisplayTore" PageSize="10" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true">
                                            <Template Context="Tor">
                                                <RadzenCard Style="width:100%; padding:0;">
                                                    <RadzenRow Gap="0">
                                                        <RadzenColumn Size="4" SizeXS="4">
                                                            <RadzenText Style="display: inline-block;" TextStyle="TextStyle.Body2">@(Tor.Spieler)</RadzenText>
                                                            @if (Tor.Eigentor)
                                                            {
                                                                <RadzenText Style="display: inline-block;" TextStyle="TextStyle.Body2">(ET)</RadzenText>
                                                            }
                                                            @if (Tor.Elfmeter)
                                                            {
                                                                <RadzenText Style="display: inline-block;" TextStyle="TextStyle.Body2">(Elfmeter)</RadzenText>
                                                            }
                                                        </RadzenColumn>
                                                        <RadzenColumn Size="1" SizeXS="1">
                                                            <RadzenText TextAlign="TextAlign.Right" TextStyle="TextStyle.Body2">@(Tor.Spielminute)</RadzenText>
                                                        </RadzenColumn>
                                                        <RadzenColumn Size="2" SizeXS="2">
                                                            <RadzenText TextAlign="TextAlign.Right" TextStyle="TextStyle.Body2">@(Tor.Spielstand)</RadzenText>
                                                        </RadzenColumn>
                                                        <RadzenColumn Size="3" SizeXS="3">
                                                            <RadzenText TextAlign="TextAlign.Right" TextStyle="TextStyle.Body2">@(Tor.Torart)</RadzenText>
                                                        </RadzenColumn>
                                                    </RadzenRow>
                                                </RadzenCard>
                                            </Template>
                                        </RadzenDataList>
                                    }
                                </p>
                            </details>

                            <details>
                                <summary>Tore</summary>
                                <p>
                                    <div class="card-body CardTore">
                                        <div style="display:block;" class="form-group row">
                                            <RadzenLabel Text="Spieler Verein 1" style="margin-left:15px;" class="col-sm-3 pl-0" Component="chkSpielerVerein1">Spieler Verein 1</RadzenLabel>
                                            <select id="cboKader" class="form-control col-sm-8" @onchange="ToreChange1">
                                                <option selected="selected">Spieler auswählen</option>
                                                @foreach (var spieler in KaderList1.OrderBy(x => x.Spielername))
                                                {
                                                    <option value="@spieler.SpielerID"> @spieler.Spielername </option>
                                                }
                                            </select>
                                        </div>
                                        <div style="display:block;" class="form-group row">
                                            <RadzenLabel Text="Spieler Verein 2" style="margin-left:15px;" class="col-sm-3 pl-0" Component="chkSpielerVerein2">Spieler Verein 2</RadzenLabel>
                                            <select id="cboKader" Style="margin-left:5px;" class="form-control col-sm-8" @onchange="ToreChange2">
                                                <option selected="selected">Spieler auswählen</option>                                                
                                                @foreach (var spieler in KaderList2.OrderBy(x => x.Spielername))
                                                {
                                                    <option value="@spieler.SpielerID"> @spieler.Spielername </option>
                                                }
                                            </select>
                                        </div>
                                        <div style="display:block;" class="form-group row">
                                            <RadzenLabel Text="Spielminute" style="margin-left:15px;" class="col-sm-3 pl-0" Component="txtSpielminute">Spielminute</RadzenLabel>
                                            <InputNumber id="txtSpielminute" @bind-Value="Tor.Spielminute" Style="margin-left:5px;" class="form-control col-sm-8"></InputNumber>
                                        </div>
                                        <div style="display:block;" class="form-group row">
                                            <RadzenLabel Text="Spielstand" style="margin-left:15px;" class="col-sm-3 pl-0" Component="txtSpielstand">Spielstand</RadzenLabel>
                                            <InputText id="txtSpielstand" @bind-Value="Tor.Spielstand" Style="margin-left:5px;" class="form-control col-sm-8"></InputText>
                                        </div>
                                        <div style="display:block;" class="form-group row">
                                            <RadzenLabel Text="Eigentor" style="margin-left:15px;" class="col-sm-3 pl-0" Component="chkEigentor">Eigentor</RadzenLabel>
                                            <RadzenCheckBox @bind-Value="Tor.Eigentor" Style="width:auto;margin-left:5px;" class="form-control col-sm-1" Name="chkEigentor" />
                                            <RadzenLabel Text="" class="col-sm-8 pl-0"></RadzenLabel>
                                            <ValidationMessage For="()=>Tor.Eigentor"></ValidationMessage>
                                        </div>
                                        <div style="display:block;" class="form-group row">
                                            <RadzenLabel Text="Elfmeter" style="margin-left:15px;" class="col-sm-3 pl-0" Component="chkElfmeter">Elfmeter</RadzenLabel>
                                            <RadzenCheckBox @bind-Value="Tor.Elfmeter" Style="width:auto;margin-left:5px;" class="form-control col-sm-1" Name="chkElfmeter" />
                                            <RadzenLabel Text="" class="col-sm-8 pl-0"></RadzenLabel>
                                            <ValidationMessage For="()=>Tor.Elfmeter"></ValidationMessage>
                                        </div>
                                        @*  <br />
                                        <div class="form-group row">
                                        <RadzenLabel Text="Torart" col-sm-3 pl-0" Component="cboArt1">Torart</RadzenLabel>
                                        <select id="cboArt1" style="display:inline-block;" class="form-control col-sm-9" @onchange="TorartChange">
                                        <option value="" selected required>Art auswählen</option>
                                        <option value="1">Linksschuß</option>
                                        <option value="2">Rechtsschuß</option>
                                        <option value="3">Kopfball</option>
                                        <option value="4">Elfmeter</option>
                                        </select>
                                        <ValidationMessage For="()=>Tor.Torart"></ValidationMessage>
                                        </div>
                                        <br /> *@
                                        <div style="display:block;" class="form-group row">
                                            <RadzenButton style="margin-left:15px;" title="Speichert Tor ab" id="btnSpeichernTor" Click="UpsertTor1" class="btn btn-primary" Text="Speichern">
                                            </RadzenButton>
                                        </div>
                                    </div>
                                </p>
                            </details>
                        </div>
                    </RadzenTabsItem>
                    <RadzenTabsItem Text="Spielverlauf">
                    </RadzenTabsItem>

                </Tabs>
            </RadzenTabs>
        </EditForm>
    </div>
</div>

@code {

    private string Titel { get; set; }
    public bool IsLoading { get; set; }
    public IEnumerable<Verein> VereineMax { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id == "0" || Id is null)
            {
                //Neuanlage
                Titel = "Neuanlage";
                Id = "0";
                IsLoading = false;
            }
            else
            {
                //Bearbeiten
                Titel = "Bearbeiten";
                await LoadSpiel();
            }
        }
    }

    private async Task LoadSpiel()
    {
        IsLoading = true;
        StateHasChanged();
        Spiel = await _SpieltagService.GetSpieltag(Convert.ToInt32(Id));
        IsLoading = false;
        StateHasChanged();
    }
    private async Task Upsert()
    {
        string[] subs = Time.Value.ToString().Split(':');
        int spieldatetime = Convert.ToInt32(subs[0].Substring(11, 2)) * 60 + (Convert.ToInt32(subs[1].Substring(0, 2)));
        DateTime SpielDateTime = Spiel.Datum.Date.AddMinutes(spieldatetime);
        Spiel.Saison = Globals.currentSaison;
        Spiel.SaisonID = Globals.SaisonID;
        Spiel.SpieltagNr = SpieltagNr;
        Spiel.LigaID = Convert.ToInt32(Ligamanager.Components.Globals.currentLiga);

        if (Id == "0")
        {
            if ((Spiel.Verein1 == null) || (Spiel.Verein2 == null) || (Spiel.Tore1_Nr == null) || (Spiel.Tore2_Nr == null) || (Spiel.Datum.ToString() == "01.01.0001 00:00:00"))
            {
                NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Neuanlage Spieltag", Detail = "Fehler beim Abspeichern" });
            }

            Spiel.Datum = SpielDateTime;
            var spieltag = await _SpieltagService.CreateSpieltag(Spiel);
            if (spieltag != null)
                NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Neuanlage Spieltag", Detail = "Abgespeichert" });
        }
        else
        {
            if ((Spiel.Verein1 == null) || (Spiel.Verein2 == null) || (Spiel.Tore1_Nr == null) || (Spiel.Tore2_Nr == null))
            {
                NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Bearbeiten Spieltag", Detail = "Fehler beim Abspeichern" });
            }

            //update
            var spieltag = await _SpieltagService.UpdateSpieltag(Spiel);
            if (spieltag != null)
                NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Bearbeiten Spieltag", Detail = "Abgespeichert" });
        }
        string url = "/spieltage/" + SpieltagNr;

        /* navigationManager.NavigateTo(url); */
    }

    private async Task UpsertTor1()
    {
        Tor.LigaID = Convert.ToInt32(Ligamanager.Components.Globals.currentLiga);
        Tor.Saison = Globals.currentSaison;
        Tor.SaisonID = Globals.SaisonID;
        Tor.SpieltagNr = SpieltagNr;
        Tor.Eigentor = false;
        Tor.SpieltagId = Convert.ToInt32(Spiel.SpieltagId);

        await _ToreService.CreateTor(Tor);

        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Bearbeiten Spieltag-Tor", Detail = "Abgespeichert" });
    }

    private async Task UpsertTor2()
    {
        Tor.LigaID = Convert.ToInt32(Ligamanager.Components.Globals.currentLiga);
        Tor.Saison = Globals.currentSaison;
        Tor.SaisonID = Globals.SaisonID;
        Tor.SpieltagNr = SpieltagNr;
        Tor.Eigentor = false;
        Tor.SpieltagId = Convert.ToInt32(Spiel.SpieltagId);

        await _ToreService.CreateTor(Tor);

        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Bearbeiten Spieltag-Tor", Detail = "Abgespeichert" });
    }

    private void Zurueck_Click()
    {
        _navigationManager.NavigateTo("/spieltage/" + SpieltagNr);
    }
}

