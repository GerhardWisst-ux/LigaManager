@page "/editspieltag/{id}"
@page "/createspieltag/{SpieltagNr}"

@inherits EditSpieltagBase
@inject LigaManagement.Web.Services.Contracts.ISpieltagService _SpieltagService
@inject LigaManagement.Web.Services.Contracts.IVereineService _VereineService
@inject NavigationManager _navigationManager

<div class="row my-2">
    <h2>@Titel Spiel</h2>

    <div class="col-10">
        <EditForm Model="Spiel" OnValidSubmit="Upsert">
            <div class="form-group row">
                <label class="col-sm-2">Verein 1</label>
                <select id="cboVerein1" class="form-control col-sm-10" @onchange="Verein1Change">

                    @foreach (var verein in VereineList.OrderBy(x => x.Vereinname1))
                    {
                        <option selected value="@verein.VereinID"> @verein.Vereinname1 </option>

                    }
                    @if (Id is null)
                    {
                        <option value="" selected required>Verein wählen</option>
                    }
                    else
                    {
                        <option selected="selected">@Spiel.Verein1</option>
                    }
                </select>

                <InputText style="display:none;" required id="txtVerein1_Nr" @bind-Value="Spiel.Verein1_Nr" class="form-control col-sm-10"></InputText>
            </div>
            <div class="form-group row">
                <label class="col-sm-2">Tore1</label>
                <InputNumber required id="txTore1" @bind-Value="Spiel.Tore1_Nr" class="form-control col-sm-10"></InputNumber>
                <ValidationMessage For="()=>Spiel.Tore1_Nr"></ValidationMessage>
            </div>
            <div class="form-group row">
                <label class="col-sm-2">Tore 2</label>
                <InputNumber required id="txTore2" @bind-Value="Spiel.Tore2_Nr" class="form-control col-sm-10"></InputNumber>
                <ValidationMessage For="()=>Spiel.Tore2_Nr"></ValidationMessage>
            </div>
            <div class="form-group row">
                <label class="col-sm-2">Verein 2</label>
                <select id="cboVerein2" class="form-control col-sm-10" @onchange="Verein2Change">
                    @foreach (var verein in VereineList.OrderBy(x => x.Vereinname1))
                    {
                        <option value="@verein.VereinID"> @verein.Vereinname1 </option>

                    }
                    @if (Id is null)
                    {
                        <option value="" selected required>Verein wählen</option>
                    }
                    else
                    {
                        <option selected="selected">@Spiel.Verein2</option>
                    }
                </select>
                 <InputText style="display:none;" required id="txtVerein2Nr" @bind-Value="Spiel.Verein2_Nr" class="form-control col-sm-10"></InputText>
            </div>
            <div class="form-group row">
                <label for="txtDatum" class="col-sm-2">Datum:</label>
                <InputDate required id="txtDatum" @bind-Value="Spiel.Datum" class="form-control col-sm-2"></InputDate>
                <ValidationMessage class="offset-sm-3 col-sm-8" For="(()=>Spiel.Datum)"></ValidationMessage>
                <input id="txtZeit" type="time" class="form-control col-sm-2" required @bind-value="Time" />
                <ValidationMessage class="offset-sm-3 col-sm-8" For="(()=>Time)"></ValidationMessage>
            </div>
            <div class="form-group row">
                <label class="col-sm-2">Ort</label>
                <InputText required id="txtOrt" @bind-Value="Spiel.Ort" class="form-control col-sm-10"></InputText>
                <ValidationMessage For="()=>Spiel.Ort"></ValidationMessage>
            </div>
            <div class="form-group row">
                <label class="col-sm-2">Schiedrichter</label>
                <InputText required id="txtSchiedrichter" @bind-Value="Spiel.Schiedrichter" class="form-control col-sm-10"></InputText>
                <ValidationMessage For="()=>Spiel.Schiedrichter"></ValidationMessage>
            </div>
            <div class="form-group row">
                <label class="col-sm-2">Zuschauer</label>
                <InputNumber required id="txtSchiedrichter" @bind-Value="Spiel.Zuschauer" class="form-control col-sm-10"></InputNumber>
                <ValidationMessage For="()=>Spiel.Zuschauer"></ValidationMessage>
            </div>
            <div class="form-group py-2">
                <button class="btn btn-primary">Speichern</button>
                <NavLink href="@($"spieltage/{SpieltagNr}")" class="btn btn-secondary">Zurück</NavLink>
            </div>
        </EditForm>
    </div>
</div>

@code {

    private string Titel { get; set; }
    public bool IsLoading { get; set; }
    public IEnumerable<Verein> VereineMax { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id == "0" || Id is null)
            {
                //Neuanlage
                Titel = "Neuanlage";
                Id = "0";
                IsLoading = false;
            }
            else
            {
                //Bearbeiten
                Titel = "Bearbeiten";
                await LoadSpiel();
            }
        }
    }

    private async Task LoadSpiel()
    {
        IsLoading = true;
        StateHasChanged();
        Spiel = await _SpieltagService.GetSpieltag(Convert.ToInt32(Id));
        IsLoading = false;
        StateHasChanged();
    }
    private async Task Upsert()
    {
        string[] subs = Time.Value.ToString().Split(':');
        int spieldatetime = Convert.ToInt32(subs[0].Substring(11, 2)) * 60 + (Convert.ToInt32(subs[1].Substring(0, 2)));
        DateTime SpielDateTime = Spiel.Datum.Date.AddMinutes(spieldatetime);

        if (Id == "0")
        {
            if (Ligamanager.Components.Globals.currentLiga == "Bundesliga")
                Spiel.LigaID = 1;
            else if (Ligamanager.Components.Globals.currentLiga == "2. Bundesliga")
                Spiel.LigaID = 2;
            else if (Ligamanager.Components.Globals.currentLiga == "3. Liga")
                Spiel.LigaID = 3;

            Spiel.Saison = Globals.currentSaison;
            Spiel.SaisonID = Globals.SaisonID;
            Spiel.SpieltagNr = SpieltagNr;

            Spiel.Datum = SpielDateTime;
            await _SpieltagService.CreateSpieltag(Spiel);
        }
        else
        {
            //update
            Spiel.Datum = SpielDateTime;
            await _SpieltagService.UpdateSpieltag(Spiel);
        }
        string url = "/spieltage/" + SpieltagNr;

        _navigationManager.NavigateTo(url);
    }
}
