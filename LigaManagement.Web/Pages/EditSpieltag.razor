@page "/Ligamanager/editspieltag/{id}"
@page "/Ligamanager/createspieltag/{SpieltagNr}"
@using LigaManagerManagement.Models
@using Microsoft.JSInterop;
@inherits EditSpieltagBase
@inject LigaManagement.Web.Services.Contracts.ISpieltagService _SpieltagService
@inject LigaManagement.Web.Services.Contracts.ISpieltagAusService _SpieltagPLService
@inject LigaManagement.Web.Services.Contracts.ISpieltageITService _SpieltagITService
@inject LigaManagement.Web.Services.Contracts.ISpieltageFRService _SpieltagFRService
@inject LigaManagement.Web.Services.Contracts.ISpieltageESService _SpieltagESService
@inject LigaManagement.Web.Services.Contracts.ISpieltageNLService _SpieltagNLService
@inject LigaManagement.Web.Services.Contracts.ISpieltagePTService _SpieltagPTService
@inject LigaManagement.Web.Services.Contracts.ISpieltageTUService _SpieltagTUService
@inject LigaManagement.Web.Services.Contracts.ISpieltageBEService _SpieltagBEService

@inject LigaManagement.Web.Services.Contracts.IVereineService _VereineService
@inject LigaManagement.Web.Services.Contracts.IToreService _ToreService
@inject NavigationManager _navigationManager
@inject LigaManagerManagement.Web.Services.LigaManagerAuthenticationStateProvider _LigaManagerAuthenticationStateProvider
@inject NotificationService NotificationService

<head>

</head>

<style type="text/css">

    details {
        border: 1px solid #aaa;
        border-radius: 4px;
        padding: 0.5em 0.5em 0;
        width: 100%;
        margin-bottom: 0.5rem;
    }

    summary {
        font-weight: bold;
        margin: -0.5em -0.5em 0;
        padding: 0.5em;
    }

    details[open] {
        padding: 0.5em;
    }

    .CardTore {
        padding: 0;
        margin: 0;
    }

    .rz-chkbox-box {
        border-color: darkgray !important;
    }

    .rz-label {        
        margin-left: 0px !important;
        padding-left: 20px !important;
    }

   @@media (max-width: 767px) {
        .rz-label {
            margin-left: 0px !important;
            padding-left: 0px !important;
        }
    }

</style>

@if (Spiel == null)
{
    <RadzenStack AlignItems="AlignItems.Center" Class="rz-m-12" Gap="2rem">
        <RadzenProgressBarCircular Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
    </RadzenStack>
}
else
{
    <div class="row my-2">
        <div class="col-12">
            <EditForm Model="Spiel" OnValidSubmit="Upsert">
                <DataAnnotationsValidator />
                <!-- This will show any validation errors -->
                <ValidationSummary />
                <RadzenCard class="m-0 rz-shadow-3" style="height:170px;">
                    <div class="d-flex flex-row">
                        <div class="card-body">
                            <span style="background-color: #1151f3; color:white;" class="float-right">@Localizer["Eingeloggter Benutzer"].Value: @_LigaManagerAuthenticationStateProvider.CurrentUser.Username</span>
                            <br />
                            <span class="float-right"><a href="Ligamanager/account/logout"><img style="height:25px;margin-top:8px;" title=">@Localizer["Logout"].Value" src="images/Logout.png" /></a></span>
                            <span class="float-right mr-2"><a href="/Ligamanager/einstellungen"><img style="width:25px; height:25px;margin-top:8px;" title="@Localizer["Einstellungen"].Value" src="images/settings.png" /></a></span>
                            <span class="float-right mr-2"><a href="/Ligamanager/info"><img style="height:25px;margin-top:8px;" title="@Localizer["Info"].Value" src="images/info.png" /></a></span>
                            <h2 class="card-title"> @Globals.currentLand @Globals.currentLiga @Titel @Localizer["Spiel"].Value </h2>
                            <h3 class="card-title">@SpieltagNr .@Localizer["Spieltag"].Value Saison @Globals.currentSaison</h3>
                            <a href="@($"Ligamanager/{Globals.currentLigaUrl}/spieltage/{SpieltagNr}")" class="card-link"><span class="glyphicon glyphicon-arrow-left"></span>@Localizer["Zurück"].Value</a>
                        </div>
                    </div>
                </RadzenCard>

                <RadzenTabs style="margin-top:2px;">
                    <Tabs>
                        <RadzenTabsItem Text="@Localizer["Spielinfo"].Value">
                            <div class="content">
                                <div class="form-group row">
                                    <RadzenLabel Text="Label" class="col-md-3 col-xs-6 ml-3" Component="cboVerein1">@Localizer["Verein 1"].Value </RadzenLabel>
                                    <select id="cboVerein1" class="form-control col-md-9 col-xs-6" @onchange="Verein1Change">
                                        <option value="" selected required>@Localizer["Verein wählen"].Value</option>
                                        @foreach (var verein in VereineList.OrderBy(x => x.Vereinname1))
                                        {
                                            @if (verein.VereinID == Spiel.Verein1_Nr)
                                            {
                                                <option selected value="@verein.VereinID"> @verein.Vereinname1 </option>
                                            }
                                            else
                                            {
                                                <option value="@verein.VereinID"> @verein.Vereinname1 </option>
                                            }
                                        }
                                    </select>
                                    <InputText style="display:none;" id="txtVerein1_Nr" @bind-Value="Spiel.Verein1_Nr" class="form-control col-md-9 col-xs-6"></InputText>
                                </div>
                                <div class="form-group row">
                                    <RadzenLabel Text="Label" class="col-md-3 col-xs-6" Component="txtTore1">@Localizer["Tore 1"].Value</RadzenLabel>
                                    @* <InputNumber required id="txtTore1" @bind-Value="Spiel.Tore1_Nr" class="form-control col-md-9 col-xs-6"></InputNumber> *@
                                    <RadzenNumeric style="display: block" Name="txtTore1" @bind-Value=@Spiel.Tore1_Nr class="form-control col-md-9 col-xs-6 pl-2" />
                                    <ValidationMessage class="form-control col-md-9 col-xs-6" For="@(() => Spiel.Tore1_Nr)" />
                                </div>
                                <div class="form-group row">
                                    <RadzenLabel Text="Label" class="col-md-3 col-xs-6" Component="txtTore2">@Localizer["Tore 2"].Value</RadzenLabel>
                                    @* <InputNumber required id="txtTore2" @bind-Value="Spiel.Tore2_Nr" class="form-control col-md-9 col-xs-6"></InputNumber> *@
                                    <RadzenNumeric style="display: block" Name="txtTore2" @bind-Value=@Spiel.Tore2_Nr class="form-control col-md-9 col-xs-6 pl-2" />
                                    @* <RadzenNumericRangeValidator Component="txtTore2" Min="1" Max="20" Text="Tore 2 darf nicht größer als 20 sein" Style="position: absolute" /> *@
                                    <ValidationMessage class="form-control col-md-9 col-xs-6" For="@(() => Spiel.Tore2_Nr)" />
                                </div>
                                <div class="form-group row">
                                    <RadzenLabel Text="Label" class="col-md-3 col-xs-6" Component="cboVerein2">@Localizer["Verein 2"].Value</RadzenLabel>
                                    <select id="cboVerein1" class="form-control col-md-9 col-xs-6" @onchange="Verein2Change">
                                        <option value="" selected required>@Localizer["Verein wählen"].Value</option>
                                        @foreach (var verein in VereineList.OrderBy(x => x.Vereinname1))
                                        {
                                            @if (verein.VereinID == Spiel.Verein2_Nr)
                                            {
                                                <option selected value="@verein.VereinID"> @verein.Vereinname1 </option>
                                            }
                                            else
                                            {
                                                <option value="@verein.VereinID"> @verein.Vereinname1 </option>
                                            }
                                        }
                                    </select>
                                    <InputText style="display:none;" id="txtVerein2Nr" @bind-Value="Spiel.Verein2_Nr" class="form-control col-md-9 col-xs-6"></InputText>
                                </div>
                                <div class="form-group row">
                                    <RadzenLabel Text="Datum" class="col-md-3 col-xs-6" Component="txtDatum">@Localizer["Datum"].Value</RadzenLabel>
                                    <InputDate required id="txtDatum" @bind-Value="Spiel.Datum" class="form-control col-md-3 col-xs-6"></InputDate>
                                    <ValidationMessage For="(()=>Spiel.Datum)"></ValidationMessage>
                                    <input id="txtZeit" type="time" class="form-control col-md-3 col-xs-6" required @bind-value="Time" />
                                </div>
                                <div class="form-group row">
                                    <RadzenLabel Text="Ort" class="col-md-3 col-xs-6" Component="cboStadion">@Localizer["Ort"].Value</RadzenLabel>
                                    <select id="cboStadion" bind-value="@Spiel.Ort" class="form-control col-md-9 col-xs-6" @onchange="StadionChange">
                                        @foreach (var verein in VereineList.OrderBy(x => x.Ort))
                                        {
                                            <option value="@verein.VereinID"> @verein.Ort </option>

                                        }
                                        @if (Id is null)
                                        {
                                            <option value="" selected>@Localizer["Stadion wählen"].Value</option>
                                        }
                                        else
                                        {
                                            <option selected="selected">@Spiel.Ort</option>
                                        }
                                    </select>
                                    <InputText style="display:none;" id="txtOrt" @bind-Value="Spiel.Ort" class="form-control col-md-9 col-xs-6"></InputText>
                                    <ValidationMessage For="()=>Spiel.Ort"></ValidationMessage>
                                </div>
                                <div class="form-group row">
                                    <RadzenLabel Text="Schiedrichter" class="col-md-3 col-xs-6" Component="txtSchiedrichter">@Localizer["Schiedrichter"].Value</RadzenLabel>
                                    <RadzenTextBox required id="txtSchiedrichter" @bind-Value="Spiel.Schiedrichter" class="form-control col-md-9 col-xs-6 pl-3"></RadzenTextBox>
                                    <ValidationMessage For="()=>Spiel.Schiedrichter"></ValidationMessage>

                                </div>
                                <div class="form-group row">
                                    <RadzenLabel Text="Zuschauer" class="col-md-3 col-xs-6" Component="txtZuschauer">@Localizer["Zuschauer"].Value</RadzenLabel>
                                    <RadzenNumeric style="display: block" Name="txtZuschauer" @bind-Value=@Spiel.Zuschauer class="form-control col-md-9 col-xs-6 pl-2" />
                                    @* <RadzenNumericRangeValidator Component="txtZuschauer" Min="100" Max="1000000" Text="Zuschauer zwischen 100 und 100000" Style="position: absolute" /> *@
                                    <ValidationMessage For="()=>Spiel.Zuschauer"></ValidationMessage>
                                </div>
                                <div class="form-group py-2">
                                    <RadzenButton title="@Localizer["Speichert Spiel ab"].Value" style="margin-left:5px;" id="btnsave" Click="Upsert" class="btn btn-primary" Text="@Localizer["Speichern"].Value">
                                        <span class="glyphicon glyphicon-save"></span>@Localizer["Speichern"].Value
                                    </RadzenButton>
                                    <RadzenButton title="@Localizer["Löscht Spiel"].Value" style="margin-left:5px;" Visible="@bDeleteButtonVisible" id="btnDelete" Click="Confirm" class="btn btn-danger" Text="Löschen">
                                        <span class="glyphicon glyphicon-remove"></span>@Localizer["Löschen"].Value
                                    </RadzenButton>

                                    <RadzenButton title="@Localizer["Zurück zu Spieltagsübersicht"].Value" style="margin-left:5px;" Click="GoBack" id="btnSpeichern" class="btn btn-secodary" Text="@Localizer["Zurück"].Value">
                                        <span class="glyphicon glyphicon-left"></span>@Localizer["Zurück"].Value
                                    </RadzenButton>
                                </div>
                            </div>
                        </RadzenTabsItem>
                        <RadzenTabsItem Visible="@AufstellungenVisible" Text="@Localizer["Aufstellungen"].Value">
                            <div style="width:100%" class="content card">
                                <div class="form-group row">
                                    <label class="col-md-3 col-xs-6">@Localizer["Kader Verein 1"].Value</label>
                                    <select id="cboKader" class="form-control col-sm-4" @onchange="KaderChange1">
                                        <option value="" selected>@Spielername</option>
                                        <option value="" selected Spieler wählen></option>
                                        @foreach (var spieler in KaderList1.OrderBy(x => x.Spielername))
                                        {
                                            <option selected value="@spieler.SpielerID"> @spieler.Spielername </option>

                                        }
                                    </select>
                                    <label class="col-md-3 col-xs-6">@Localizer["Kader Verein 2"].Value</label>
                                    <select id="cboKader2" class="form-control col-sm-4" @onchange="KaderChange2">
                                        <option value="" selected>@Spielername</option>
                                        @foreach (var spieler in KaderList2.OrderBy(x => x.Spielername))
                                        {
                                            <option selected value="@spieler.SpielerID"> @spieler.Spielername </option>

                                        }
                                        <option value="" selected>@Localizer["Spieler wählen"].Value</option>
                                    </select>
                                    <InputText style="display:none;" id="txtSpieler" @bind-Value="Spiel.Verein1_Nr" class="form-control col-md-9 col-xs-6"></InputText>
                                </div>
                                <div class="form-group row">
                                    <RadzenLabel Text="Spieler Verein 1" class="col-md-3 col-xs-6 pl-0" Component="chkSpielerVerein1">@Localizer["Spieler Verein 1"].Value </RadzenLabel>
                                    <select id="cboSpieler1" class="form-control col-sm-4" @onchange="KaderChange1">
                                        <option value="" selected>@Spielername</option>
                                        @foreach (var spieler in SpielerList1.OrderBy(x => x.Spielername))
                                        {
                                            <option selected value="@spieler.SpielerID"> @spieler.Spielername </option>

                                        }
                                        <option value="" selected>@Localizer["Spieler wählen"].Value</option>
                                    </select>
                                    <RadzenLabel Text="Spieler Verein 2" class="col-md-3 col-xs-6 pl-0" Component="chkSpielerVerein1">@Localizer["Spieler Verein 2"].Value</RadzenLabel>
                                    <select id="cboSpieler2" class="form-control col-sm-4" @onchange="KaderChange2">
                                        <option value="" selected>@Spielername</option>
                                        @foreach (var spieler in SpielerList2.OrderBy(x => x.Spielername))
                                        {
                                            <option selected value="@spieler.SpielerID"> @spieler.Spielername </option>

                                        }
                                        <option value="" selected>@Localizer["Spieler wählen"].Value</option>
                                    </select>
                                    <InputText style="display:none;" id="txtSpieler" @bind-Value="Spiel.Verein1_Nr" class="form-control col-md-9 col-xs-6"></InputText>
                                    <div class="form-group-row py-2">
                                        <button onclick="SpeichernSpieler" class="btn btn-primary"><span class="glyphicon glyphicon-save"></span>@Localizer["Speichern"].Value</button>
                                        <NavLink href="@($"Ligamanager/{Globals.currentLigaUrl}/spieltage")" class="btn btn-secondary"><span class="glyphicon glyphicon-arrow-left"></span>@Localizer["Zurück"].Value</NavLink>

                                        <button onclick="GoBack" class="btn btn-primary"><span class="glyphicon glyphicon-left"></span>@Localizer["Zurück"].Value</button>
                                    </div>
                                </div>
                            </div>
                        </RadzenTabsItem>
                        <RadzenTabsItem Text=@Localizer["Tore"].Value>
                            <div class="form-group row">
                                <details open>
                                    <summary>@Localizer["Übersicht Spielverlauf"].Value</summary>
                                    <p>
                                        @if (ToreList != null)
                                        {
                                            var ToreList2 = ToreList.Sort("Spielstand", BootstrapBlazor.Components.SortOrder.Asc);

                                            <RadzenDataList AllowVirtualization=@allowVirtualization Style="@(allowVirtualization ? "height:700px;overflow:auto;" : ";")"
                                                            WrapItems="@(!allowVirtualization)" AllowPaging="@(!allowVirtualization)"
                                                            Data="@ToreList2" TItem="DisplayTore" PageSize="10" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true">
                                                <Template Context="Tor">
                                                    <RadzenCard Style="width:100%; padding:0;">
                                                        <RadzenRow Gap="0">
                                                            <RadzenColumn Size="4" SizeXS="4">
                                                                <RadzenText Style="display: inline-block;" TextStyle="TextStyle.Body2">@(Tor.Spieler)</RadzenText>
                                                                @if (Tor.Eigentor)
                                                                {
                                                                    <RadzenText Style="display: inline-block;" TextStyle="TextStyle.Body2">(ET)</RadzenText>
                                                                }
                                                                @if (Tor.Elfmeter)
                                                                {
                                                                    <RadzenText Style="display: inline-block;" TextStyle="TextStyle.Body2">(Elfmeter)</RadzenText>
                                                                }
                                                            </RadzenColumn>
                                                            <RadzenColumn Size="1" SizeXS="1">
                                                                <RadzenText TextAlign="TextAlign.Right" TextStyle="TextStyle.Body2">@(Tor.Spielminute)</RadzenText>
                                                            </RadzenColumn>
                                                            <RadzenColumn Size="2" SizeXS="2">
                                                                <RadzenText TextAlign="TextAlign.Right" TextStyle="TextStyle.Body2">@(Tor.Spielstand)</RadzenText>
                                                            </RadzenColumn>
                                                            <RadzenColumn Size="3" SizeXS="3">
                                                                <RadzenText TextAlign="TextAlign.Right" TextStyle="TextStyle.Body2">@(Tor.Torart)</RadzenText>
                                                            </RadzenColumn>
                                                        </RadzenRow>
                                                    </RadzenCard>
                                                </Template>
                                            </RadzenDataList>
                                        }
                                    </p>
                                </details>

                                <details>
                                    <summary>@Localizer["Goals"].Value</summary>
                                    <p>
                                        <div class="card-body CardTore">
                                            <div style="display:block;" class="form-group row">
                                                <RadzenLabel Text="Spieler Verein 1" style="margin-left:15px;" class="col-md-3 col-xs-6 pl-0" Component="chkSpielerVerein1">@Localizer["Spieler Verein 1"].Value</RadzenLabel>
                                                <select id="cboKader" class="form-control col-sm-8" @onchange="ToreChange1">
                                                    <option selected="selected">@Localizer["Spieler wählen"].Value </option>
                                                    @foreach (var spieler in KaderList1.OrderBy(x => x.Spielername))
                                                    {
                                                        <option value="@spieler.SpielerID"> @spieler.Spielername </option>
                                                    }
                                                </select>
                                            </div>
                                            <div style="display:block;" class="form-group row">
                                                <RadzenLabel Text="Spieler Verein 2" style="margin-left:15px;" class="col-md-3 col-xs-6 pl-0" Component="chkSpielerVerein2">@Localizer["Spieler Verein 2"].Value</RadzenLabel>
                                                <select id="cboKader" Style="margin-left:5px;" class="form-control col-sm-8" @onchange="ToreChange2">
                                                    <option selected="selected">@Localizer["Spieler wählen"].Value</option>
                                                    @foreach (var spieler in KaderList2.OrderBy(x => x.Spielername))
                                                    {
                                                        <option value="@spieler.SpielerID"> @spieler.Spielername </option>
                                                    }
                                                </select>
                                            </div>
                                            <div style="display:block;" class="form-group row">
                                                <RadzenLabel Text="Spielminute" style="margin-left:15px;" class="col-md-3 col-xs-6 pl-0" Component="txtSpielminute">@Localizer["Spielminute"].Value</RadzenLabel>
                                                <InputNumber id="txtSpielminute" @bind-Value="Tor.Spielminute" Style="margin-left:5px;" class="form-control col-sm-8"></InputNumber>
                                            </div>
                                            <div style="display:block;" class="form-group row">
                                                <RadzenLabel Text="Spielstand" style="margin-left:15px;" class="col-md-3 col-xs-6 pl-0" Component="txtSpielstand">@Localizer["Spielstand"].Value</RadzenLabel>
                                                <InputText id="txtSpielstand" @bind-Value="Tor.Spielstand" Style="margin-left:5px;" class="form-control col-sm-8"></InputText>
                                            </div>
                                            <div style="display:block;" class="form-group row">
                                                <RadzenLabel Text="Eigentor" style="margin-left:15px;" class="col-md-3 col-xs-6 pl-0" Component="chkEigentor">@Localizer["Eigentor"].Value</RadzenLabel>
                                                <RadzenCheckBox @bind-Value="Tor.Eigentor" Style="width:auto;margin-left:5px;" class="form-control col-sm-1" Name="chkEigentor" />
                                                <RadzenLabel Text="" class="col-sm-8 pl-0"></RadzenLabel>
                                                <ValidationMessage For="()=>Tor.Eigentor"></ValidationMessage>
                                            </div>
                                            <div style="display:block;" class="form-group row">
                                                <RadzenLabel Text="Elfmeter" style="margin-left:15px;" class="col-md-3 col-xs-6 pl-0" Component="chkElfmeter">@Localizer["Elfmeter"].Value</RadzenLabel>
                                                <RadzenCheckBox @bind-Value="Tor.Elfmeter" Style="width:auto;margin-left:5px;" class="form-control col-sm-1" Name="chkElfmeter" />
                                                <RadzenLabel Text="" class="col-sm-8 pl-0"></RadzenLabel>
                                                <ValidationMessage For="()=>Tor.Elfmeter"></ValidationMessage>
                                            </div>
                                            @*  <br />
                                        <div class="form-group row">
                                        <RadzenLabel Text="Torart" col-md-3 col-xs-6 pl-0" Component="cboArt1">Torart</RadzenLabel>
                                        <select id="cboArt1" style="display:inline-block;" class="form-control col-md-9 col-xs-6" @onchange="TorartChange">
                                        <option value="" selected required>Art auswählen</option>
                                        <option value="1">Linksschuß</option>
                                        <option value="2">Rechtsschuß</option>
                                        <option value="3">Kopfball</option>
                                        <option value="4">Elfmeter</option>
                                        </select>
                                        <ValidationMessage For="()=>Tor.Torart"></ValidationMessage>
                                        </div>
                                        <br /> *@
                                            <div style="display:block;" class="form-group row">
                                                <RadzenButton style="margin-left:15px;" title="@Localizer["Speichert Tor ab"].Value" id="btnSpeichernTor" Click="UpsertTor1" class="btn btn-primary" Text="@Localizer["Speichern"].Value">
                                                </RadzenButton>
                                            </div>
                                        </div>
                                    </p>
                                </details>
                            </div>
                        </RadzenTabsItem>
                        <RadzenTabsItem Visible="@SpielverlaufVisible" Text="@Localizer["Spielverlauf"].Value">
                        </RadzenTabsItem>

                    </Tabs>
                </RadzenTabs>
            </EditForm>
        </div>
    </div>
}
@code {

    private string Titel { get; set; }
    public bool IsLoading { get; set; }
    public IEnumerable<Verein> VereineMax { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id == "0" || Id is null)
            {
                //Neuanlage
                Titel = @Localizer["Neuanlage"].Value;
                Id = "0";
                IsLoading = false;
            }
            else
            {
                //Bearbeiten
                Titel = @Localizer["Bearbeiten"].Value;
                await LoadSpiel();
            }
        }
    }

    private async Task LoadSpiel()
    {
        IsLoading = true;

        // if (Globals.LigaID < 4)
        //     Spiel = await _SpieltagService.GetSpieltag(Convert.ToInt32(Id));
        // else if (Globals.LigaID == 4)
        //     Spiel = await _SpieltagPLService.GetSpieltag(Convert.ToInt32(Id));
        // else if (Globals.LigaID == 6)
        //     Spiel = await _SpieltagITService.GetSpieltag(Convert.ToInt32(Id));
        // else if (Globals.LigaID == 7)
        //     Spiel = await _SpieltagFRService.GetSpieltag(Convert.ToInt32(Id));
        // else if (Globals.LigaID == 8)
        //     Spiel = await _SpieltagESService.GetSpieltag(Convert.ToInt32(Id));

        IsLoading = false;
        StateHasChanged();
    }
    private async Task Upsert()
    {
        Spieltag spieltag = new Spieltag();
        bool bError = false;
        string[] subs = Time.Value.ToString().Split(':');
        int spieldatetime = Convert.ToInt32(subs[0].Substring(11, 2)) * 60 + (Convert.ToInt32(subs[1].Substring(0, 2)));
        DateTime SpielDateTime = Spiel.Datum.Date.AddMinutes(spieldatetime);
        Spiel.Saison = Globals.currentSaison;
        Spiel.SaisonID = Globals.SaisonID;
        Spiel.SpieltagNr = SpieltagNr;
        Spiel.LigaID = Convert.ToInt32(Globals.LigaID);


        if ((Spiel.Verein1_Nr == "0"))

        {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = @Localizer["Spieltag"].Value, Detail = "Verein 1 nicht angegeben.Speichern nicht möglich." });
            bError = true;
        }

        else if ((Spiel.Tore1_Nr == null))
        {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = @Localizer["Spieltag"].Value, Detail = "Tore 1 nicht angegeben.Speichern nicht möglich." });
            bError = true;
        }

        else if ((Spiel.Tore2_Nr == null))
        {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = @Localizer["Spieltag"].Value, Detail = "Tore 2 nicht angegeben.Speichern nicht möglich." });
            bError = true;
        }

        else if ((Spiel.Verein2_Nr == "0"))
        {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = @Localizer["Spieltag"].Value, Detail = "Verein 2 nicht angegeben.Speichern nicht möglich." });
            bError = true;
        }

        else if ((Spiel.Verein1 == Spiel.Verein2))
        {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = @Localizer["Spieltag"].Value, Detail = "Bitte wählen Sie unterschiedliche Vereine.Speichern nicht möglich." });
            bError = true;
        }

        else if ((Spiel.Datum.Date.ToString() == "01.01.0001"))
        {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = @Localizer["Spieltag"].Value, Detail = "Datum nicht angegeben.Speichern nicht möglich." });
            bError = true;
        }

        // else if ((Spiel.Datum.Minute.ToString() == "0"))
        // {
        //     NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = @Localizer["Spieltag"].Value, Detail = "Zeit(Stunde) nicht angegeben. Speichern nicht möglich." });
        //     bError = true;
        // }

        else if ((!LigaManagement.Models.ExtensionMethos.IsDate(Spiel.Datum.ToString())))
        {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = @Localizer["Spieltag"].Value, Detail = "Datum nicht korrekt.Speichern nicht möglich." });
            bError = true; ;
        }

        else if ((Spiel.Schiedrichter == null))
        {
            Spiel.Schiedrichter = "k.A.";
        }

        if (bError == true)
            return;

        if (Id == "0")
        {
            Spiel.Datum = SpielDateTime;

            if (Globals.LigaID < 3)
                spieltag = await _SpieltagService.CreateSpieltag(Spiel);
            else if (Globals.LigaID == 3)
                spieltag = await _SpieltagService.CreateSpieltagL3(Spiel);
            else if (Globals.LigaID == 4)
                spieltag = await _SpieltagPLService.CreateSpieltag(Spiel);
            else if (Globals.LigaID == 6)
                spieltag = await _SpieltagITService.CreateSpieltag(Spiel);
            else if (Globals.LigaID == 7)
                spieltag = await _SpieltagFRService.CreateSpieltag(Spiel);
            else if (Globals.LigaID == 8)
                spieltag = await _SpieltagESService.CreateSpieltag(Spiel);
            else if (Globals.LigaID == 9)
                spieltag = await _SpieltagNLService.CreateSpieltag(Spiel);
            else if (Globals.LigaID == 10)
                spieltag = await _SpieltagPTService.CreateSpieltag(Spiel);
            else if (Globals.LigaID == 11)
                spieltag = await _SpieltagTUService.CreateSpieltag(Spiel);
            else if (Globals.LigaID == 14)
                spieltag = await _SpieltagBEService.CreateSpieltag(Spiel);
            else if (Globals.LigaID == 15)
                spieltag = await _SpieltagPLService.CreateSpieltag(Spiel);

            if (spieltag != null)
                NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Neuanlage Spieltag", Detail = "Abgespeichert" });
        }
        else
        {
            //update
            if (Globals.LigaID < 3)
                spieltag = await _SpieltagService.UpdateSpieltag(Spiel);
            else if (Globals.LigaID == 3)
                spieltag = await _SpieltagService.UpdateSpieltagL3(Spiel);
            else if (Globals.LigaID == 4)
                spieltag = await _SpieltagPLService.UpdateSpieltag(Spiel);
            else if (Globals.LigaID == 6)
                spieltag = await _SpieltagITService.UpdateSpieltag(Spiel);
            else if (Globals.LigaID == 7)
                spieltag = await _SpieltagFRService.UpdateSpieltag(Spiel);
            else if (Globals.LigaID == 8)
                spieltag = await _SpieltagESService.UpdateSpieltag(Spiel);
            else if (Globals.LigaID == 9)
                spieltag = await _SpieltagNLService.UpdateSpieltag(Spiel);
            else if (Globals.LigaID == 10)
                spieltag = await _SpieltagPTService.UpdateSpieltag(Spiel);
            else if (Globals.LigaID == 11)
                spieltag = await _SpieltagTUService.UpdateSpieltag(Spiel);
            else if (Globals.LigaID == 14)
                spieltag = await _SpieltagBEService.UpdateSpieltag(Spiel);
            else if (Globals.LigaID == 15)
                spieltag = await _SpieltagPLService.UpdateSpieltag(Spiel);

            if (spieltag != null)
                NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Bearbeiten Spieltag", Detail = "Abgespeichert" });
        }
        string url = "/Ligamanager/spieltage/" + SpieltagNr;

        /* navigationManager.NavigateTo(url); */
    }

    private async Task UpsertTor1()
    {
        Tor.LigaID = Convert.ToInt32(Ligamanager.Components.Globals.currentLiga);
        Tor.Saison = Globals.currentSaison;
        Tor.SaisonID = Globals.SaisonID;
        Tor.SpieltagNr = SpieltagNr;
        Tor.Eigentor = false;
        Tor.SpieltagId = Convert.ToInt32(Spiel.SpieltagId);

        await _ToreService.CreateTor(Tor);

        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Bearbeiten Spieltag-Tor", Detail = "Abgespeichert" });
    }


    private async Task UpsertTor2()
    {
        Tor.LigaID = Convert.ToInt32(Ligamanager.Components.Globals.currentLiga);
        Tor.Saison = Globals.currentSaison;
        Tor.SaisonID = Globals.SaisonID;
        Tor.SpieltagNr = SpieltagNr;
        Tor.Eigentor = false;
        Tor.SpieltagId = Convert.ToInt32(Spiel.SpieltagId);

        await _ToreService.CreateTor(Tor);

        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Bearbeiten Spieltag-Tor", Detail = "Abgespeichert" });
    }

    private void GoBack()
    {
        _navigationManager.NavigateTo($"Ligamanager/{Globals.currentLigaUrl}/spieltage/{SpieltagNr}", true);
    }
}

