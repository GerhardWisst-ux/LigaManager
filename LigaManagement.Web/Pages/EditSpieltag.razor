@page "/editspieltag/{id}"
@page "/createspieltag/{SpieltagNr}"
@using LigaManagerManagement.Models

@inherits EditSpieltagBase
@inject LigaManagement.Web.Services.Contracts.ISpieltagService _SpieltagService
@inject LigaManagement.Web.Services.Contracts.IVereineService _VereineService
@inject NavigationManager _navigationManager
@inject NotificationService NotificationService

<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
</head>

<div class="row my-2">
    <div class="col-12">
        <EditForm Model="Spiel" OnValidSubmit="Upsert">
            <DataAnnotationsValidator />
            <!-- This will show any validation errors -->
            <ValidationSummary />
            <RadzenCard class="m-0 mb-3">
                <div class="d-flex flex-row">
                    <div class="card-body">
                        <h2 class="card-title">@Titel Spiel</h2>
                        <h3 class="card-title">@SpieltagNr .Spieltag Saison @Globals.currentSaison</h3>
                        <a href="@($"spieltage/{SpieltagNr}")" class="card-link"><span class="glyphicon glyphicon-arrow-left"></span>Zurück</a>
                    </div>
                </div>
            </RadzenCard>

            <RadzenTabs>
                <Tabs>
                    <RadzenTabsItem Text="Spielinfo">
                        <div class="content">
                            <div class="form-group row">
                                <RadzenLabel Text="Label" class="col-sm-2" Component="cboVerein1">Verein1</RadzenLabel>
                                <select id="cboVerein1" class="form-control col-sm-10" @onchange="Verein1Change">                                    
                                    @foreach (var verein in VereineList.OrderBy(x => x.Vereinname1))
                                    {
                                        <option value="@verein.VereinID"> @verein.Vereinname1 </option>

                                    }
                                    @if (Id is null)
                                    {
                                        <option value="" selected required>Verein wählen</option>
                                    }
                                    else
                                    {
                                        <option selected="selected">@Spiel.Verein1</option>
                                    }
                                </select>
                                <InputText style="display:none;" id="txtVerein1_Nr" @bind-Value="Spiel.Verein1_Nr" class="form-control col-sm-10"></InputText>
                            </div>
                            <div class="form-group row">
                                <RadzenLabel Text="Label" class="col-sm-2" Component="txtTore1">Tore 1</RadzenLabel>
                                <InputNumber required id="txtTore1" @bind-Value="Spiel.Tore1_Nr" class="form-control col-sm-10"></InputNumber>

                                @* <RadzenNumeric class="form-control col-sm-10" @bind-Value=@Spiel.Tore1_Nr InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "enter value" }})" /> *@
                                <ValidationMessage For="(()=>Spiel.Tore1_Nr)"></ValidationMessage>
                            </div>
                            <div class="form-group row">
                                <RadzenLabel Text="Label" class="col-sm-2" Component="txtTore2">Tore 2</RadzenLabel>
                                <InputNumber required id="txtTore2" @bind-Value="Spiel.Tore2_Nr" class="form-control col-sm-10"></InputNumber>                                
                                @* <RadzenNumericRangeValidator Component="txtTore2" Min="1" Max="20" Text="Tore 2 darf nicht größer als 20 sein" Style="position: absolute" /> *@
                                <ValidationMessage For="(()=>Spiel.Tore2_Nr)"></ValidationMessage>
                            </div>
                            <div class="form-group row">
                                <RadzenLabel Text="Label" class="col-sm-2" Component="cboVerein2">Verein2</RadzenLabel>
                                <select id="cboVerein2" class="form-control col-sm-10" @onchange="Verein2Change">
                                    @* <option selected Value="Spiel.Verein2_Nr"></option> *@
                                    @foreach (var verein in VereineList.OrderBy(x => x.Vereinname1))
                                    {
                                        <option value="@verein.VereinID"> @verein.Vereinname1 </option>

                                    }
                                    @if (Id is null)
                                    {
                                        <option value="" selected>Verein wählen</option>
                                    }
                                    else
                                    {
                                        <option selected="selected">@Spiel.Verein2</option>
                                    }
                                </select>
                                <InputText style="display:none;" id="txtVerein2Nr" @bind-Value="Spiel.Verein2_Nr" class="form-control col-sm-10"></InputText>
                            </div>
                            <div class="form-group row">
                                <RadzenLabel Text="Label" class="col-sm-2" Component="txtDatum">Datum</RadzenLabel>
                                <InputDate required id="txtDatum" @bind-Value="Spiel.Datum" class="form-control col-sm-2"></InputDate>
                                @* <RadzenDatePicker class="form-control col-sm-2" @bind-Value=@Spiel.Datum Name="RadzenDatePickerBindValue" ShowCalendarWeek /> *@
                                <ValidationMessage class="offset-sm-3 col-sm-8" For="(()=>Spiel.Datum)"></ValidationMessage>
                                <input id="txtZeit" type="time" class="form-control col-sm-2" required @bind-value="Time" />
                            </div>
                            <div class="form-group row">
                                <RadzenLabel Text="Label" class="col-sm-2" Component="cboStadion">Ort</RadzenLabel>
                                <select id="cboStadion" class="form-control col-sm-10" @onchange="StadionChange">
                                    @* <option value="" selected>@Stadion</option> *@
                                    @foreach (var verein in VereineList.OrderBy(x => x.Ort))
                                    {
                                        <option value="@verein.VereinID"> @verein.Ort </option>

                                    }
                                    @if (Id is null)
                                    {
                                        <option value="" selected>Stadion wählen</option>
                                    }
                                    else
                                    {
                                        <option selected="selected">@Spiel.Ort</option>
                                    }
                                </select>
                                <InputText style="display:none;" id="txtOrt" @bind-Value="Spiel.Ort" class="form-control col-sm-10"></InputText>
                            </div>
                            <div class="form-group row">
                                <RadzenLabel Text="Schiedrichter" class="col-sm-2" Component="txtSchiedrichter">Schiedrichter</RadzenLabel>
                                <InputText required id="txtSchiedrichter" @bind-Value="Spiel.Schiedrichter" class="form-control col-sm-10"></InputText>                                
                                <ValidationMessage For="()=>Spiel.Schiedrichter"></ValidationMessage>
                            </div>
                            <div class="form-group row">
                                <RadzenLabel Text="Zuschauer" class="col-sm-2" Component="txtZuschauer">Schiedrichter</RadzenLabel>
                                <InputNumber required id="txtZuschauer" @bind-Value="Spiel.Zuschauer" class="form-control col-sm-10"></InputNumber>
                            </div>
                            <div class="form-group py-2">                                
                                <RadzenButton title="Speichert Spieltag ab" style="margin-left:5px;" id="btnSpeichern" Click="Upsert" class="btn btn-primary" Text="Speichern">
                                    <span class="glyphicon glyphicon-save"></span>Speichern
                                </RadzenButton>

                                <RadzenButton title="Zurück zu Spieltagsübersicht" style="margin-left:5px;" Click="Zurueck_Click" id="btnSpeichern" class="btn btn-secodary" Text="Zurück">

                                </RadzenButton>
                            </div>
                        </div>
                    </RadzenTabsItem>
                    <RadzenTabsItem Text="Aufstellungen">                      
                        <div style="width:100%" class="content card">
                            <div class="form-group row">
                                <label class="col-sm-2">Kader Verein 1</label>
                                <select id="cboKader" class="form-control col-sm-4" @onchange="KaderChange1">
                                    <option value="" selected>@Spielername</option>
                                    <option value="" selected Spieler wählen</option>
                                    @foreach (var spieler in KaderList1.OrderBy(x => x.Spielername))
                                    {
                                        <option selected value="@spieler.SpielerID"> @spieler.Spielername </option>

                                    }
                                </select>
                                <label class="col-sm-2">Kader Verein 2</label>
                                <select id="cboKader2" class="form-control col-sm-4" @onchange="KaderChange2">
                                    <option value="" selected>@Spielername</option>
                                    <option value="" selected>Spieler wählen</option>
                                    @foreach (var spieler in KaderList2.OrderBy(x => x.Spielername))
                                    {
                                        <option selected value="@spieler.SpielerID"> @spieler.Spielername </option>

                                    }
                                </select>
                                <InputText style="display:none;" id="txtSpieler" @bind-Value="Spiel.Verein1_Nr" class="form-control col-sm-10"></InputText>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-2">Spieler Verein 1</label>
                                <select id="cboSpieler1" class="form-control col-sm-4" @onchange="KaderChange1">
                                    <option value="" selected>@Spielername</option>
                                    <option value="" selected>Spieler wählen</option>
                                    @foreach (var spieler in SpielerList1.OrderBy(x => x.Spielername))
                                    {
                                        <option selected value="@spieler.SpielerID"> @spieler.Spielername </option>

                                    }
                                </select>
                                <label class="col-sm-2">Spieler Verein 2</label>
                                <select id="cboSpieler2" class="form-control col-sm-4" @onchange="KaderChange2">
                                    <option value="" selected>@Spielername</option>
                                    <option value="" selected>Spieler wählen</option>
                                    @foreach (var spieler in SpielerList2.OrderBy(x => x.Spielername))
                                    {
                                        <option selected value="@spieler.SpielerID"> @spieler.Spielername </option>

                                    }
                                </select>
                                <InputText style="display:none;" id="txtSpieler" @bind-Value="Spiel.Verein1_Nr" class="form-control col-sm-10"></InputText>
                                <div class="form-group-row py-2">
                                    <button onclick="SpeichernSpieler" class="btn btn-primary"><span class="glyphicon glyphicon-save"></span>Speichern</button>
                                    <NavLink href="@($"spieltage/{SpieltagNr}")" class="btn btn-secondary"><span class="glyphicon glyphicon-arrow-left"></span>Zurück</NavLink>
                                </div>
                            </div>
                        </div>
                    </RadzenTabsItem>
                    <RadzenTabsItem Text="Tore">                        
                    </RadzenTabsItem>
                    <RadzenTabsItem Text="Spielverlauf">
                    </RadzenTabsItem>
                </Tabs>
            </RadzenTabs>     
        </EditForm>
    </div>
</div>

@code {

    private string Titel { get; set; }
    public bool IsLoading { get; set; }
    public IEnumerable<Verein> VereineMax { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id == "0" || Id is null)
            {
                //Neuanlage
                Titel = "Neuanlage";
                Id = "0";
                IsLoading = false;
            }
            else
            {
                //Bearbeiten
                Titel = "Bearbeiten";
                await LoadSpiel();
            }
        }
    }

    private async Task LoadSpiel()
    {
        IsLoading = true;
        StateHasChanged();
        Spiel = await _SpieltagService.GetSpieltag(Convert.ToInt32(Id));
        IsLoading = false;
        StateHasChanged();
    }
    private async Task Upsert()
    {
        string[] subs = Time.Value.ToString().Split(':');
        int spieldatetime = Convert.ToInt32(subs[0].Substring(11, 2)) * 60 + (Convert.ToInt32(subs[1].Substring(0, 2)));
        DateTime SpielDateTime = Spiel.Datum.Date.AddMinutes(spieldatetime);

        if (Id == "0")
        {
            Spiel.LigaID = Convert.ToInt32(Ligamanager.Components.Globals.currentLiga);

            Spiel.Saison = Globals.currentSaison;
            Spiel.SaisonID = Globals.SaisonID;
            Spiel.SpieltagNr = SpieltagNr;

            Spiel.Datum = SpielDateTime;
            await _SpieltagService.CreateSpieltag(Spiel);


            // for (int i = 0; i < SpielerList1.Count(); i++)
            // {
            //     SpielerSpieltag spielerspieltag = new SpielerSpieltag();
            //     spielerspieltag.KaderId = SpielerList1[i].SpielerID;
            //     spielerspieltag.SaisonId = Globals.SaisonID;
            //     spielerspieltag.SpieltagId = Globals.Spieltag;
            //     spielerspieltag.Tore = 0;
            //     spielerspieltag.Einsatz = 1;
            //     spielerspieltag.Tore = 0;
            //     spielerspieltag.Spielminuten = 90;
            //     spielerspieltag.Eingewechselt = false;
            //     spielerspieltag.Ausgewechselt = false;
            //     var erg = SpielerSpieltagService.CreateSpieler(spielerspieltag);
            // }

            // for (int i = 0; i < SpielerList2.Count(); i++)
            // {
            //     SpielerSpieltag spielerspieltag = new SpielerSpieltag();
            //     spielerspieltag.KaderId = SpielerList2[i].SpielerID;
            //     spielerspieltag.SaisonId = Globals.SaisonID;
            //     spielerspieltag.SpieltagId = Globals.Spieltag;
            //     spielerspieltag.Tore = 0;
            //     spielerspieltag.Einsatz = 1;
            //     spielerspieltag.Tore = 0;
            //     spielerspieltag.Spielminuten = 90;
            //     spielerspieltag.Eingewechselt = false;
            //     spielerspieltag.Ausgewechselt = false;
            //     SpielerSpieltag spieler = await SpielerSpieltagService.CreateSpieler(spielerspieltag);
            // }
        }
        else
        {
            //update
            Spiel.Datum = SpielDateTime;
            await _SpieltagService.UpdateSpieltag(Spiel);

            // for (int i = 0; i < SpielerList1.Count(); i++)
            // {
            //     SpielerSpieltag spielerspieltag = new SpielerSpieltag();
            //     spielerspieltag.KaderId = SpielerList1[i].SpielerID;
            //     spielerspieltag.SaisonId = Globals.SaisonID;
            //     spielerspieltag.SpieltagId = Globals.Spieltag;
            //     spielerspieltag.Tore = 0;
            //     spielerspieltag.Einsatz = 1;
            //     spielerspieltag.Tore = 0;
            //     spielerspieltag.Spielminuten = 90;
            //     spielerspieltag.Eingewechselt = false;
            //     spielerspieltag.Ausgewechselt = false;
            //     var erg = SpielerSpieltagService.CreateSpieler(spielerspieltag);
            // }

            // for (int i = 0; i < SpielerList2.Count(); i++)
            // {
            //     SpielerSpieltag spielerspieltag = new SpielerSpieltag();
            //     spielerspieltag.KaderId = SpielerList2[i].SpielerID;
            //     spielerspieltag.SaisonId = Globals.SaisonID;
            //     spielerspieltag.SpieltagId = Globals.Spieltag;
            //     spielerspieltag.Tore = 0;
            //     spielerspieltag.Einsatz = 1;
            //     spielerspieltag.Tore = 0;
            //     spielerspieltag.Spielminuten = 90;
            //     spielerspieltag.Eingewechselt = false;
            //     spielerspieltag.Ausgewechselt = false;
            //     SpielerSpieltag spieler = await SpielerSpieltagService.CreateSpieler(spielerspieltag);
            // }
        }
        string url = "/spieltage/" + SpieltagNr;

        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Bearbeiten Spieltag", Detail = "Abgespeichert" });
        /* navigationManager.NavigateTo(url); */
    }

    private void Zurueck_Click()
    {
        _navigationManager.NavigateTo("/spieltage/" + SpieltagNr);
    }
}

