@page "/createsaison"
@page "/editsaison/{Id}"
@using LigaManagement.Web.Services.Contracts;
@using LigaManagerManagement.Models;
@inherits LigaManagerManagement.Web.Pages.SaisonenListBase
@inject LigaManagement.Web.Services.Contracts.ISaisonenService _SaisonenService
@inject NavigationManager _navigationManager
@inject NotificationService NotificationService
@using Radzen;

<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css" />
    <script type="text/javascript" src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
</head>

<style>
    * {
        box-sizing: border-box;
    }

    .ul {
        list-style-type: none;
        padding: 0;
        margin: 0;
    }

        .ul li {
            border: 1px solid #ddd;
            margin-top: -1px; /* Prevent double borders */
            background-color: #f6f6f6;
            padding: 5px;
        }

    .tab {
        color: darkblue;
    }

</style>

<div class="row my-2">
    <div class="col-10">
        <EditForm Model="Saison" OnValidSubmit="UpsertSaison">
            <RadzenCard class="m-0 mb-3">
                <div class="d-flex flex-row">
                    <div class="card-body">
                        <h2 class="card-title">@Titel</h2>                        
                    </div>
                </div>
            </RadzenCard>
            <div class="tabs">
                <details open name="tab">
                    <summary class="tab"> Grunddaten</summary>
                    <div class="form-group">
                        <label class="col-sm-3 pl-0">Saisonname</label>
                        <InputText required id="txtSaisonname" @bind-Value="Saison.Saisonname" class="form-control col-9"></InputText>
                        <ValidationMessage For="()=>Saison.Saisonname"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 pl-0">Liganame</label>
                        @* <InputText required id="txtLiganame" @bind-Value="Saison.Liganame" class="form-control col-9"></InputText>
                        <ValidationMessage For="()=>Saison.Liganame"></ValidationMessage> *@
                        <select id="cboLiga" class="form-control col-9 dropdown" @onchange="LigaChange">
                            <option value="@Convert.ToInt32(Globals.currentLiga)"> @Liganame </option>
                            @if (LigenList != null)
                            {
                                @foreach (var liga in LigenList.OrderBy(o => o.LigaID))
                                {
                                    <option value="@liga.LigaID"> @liga.Liganame </option>
                                }
                            }
                        </select>
                        <label title="Bitte Liga wählen" style="display:@DisplayErrorLiga;color:red;" id="lblErrorLiga">Bitte Liga wählen</label>
                    </div>
                    <div class="form-group">
                        <RadzenLabel Text="Label" class="col-sm-3 pl-0" Component="chkAbgeschlossen">Aktuell</RadzenLabel>
                        <RadzenCheckBox @bind-Value="Saison.Aktuell" Style="border-width:0px; width:40px;max-width:40px;" class="form-control col-sm-9" Name="chkAktuell" />
                        <RadzenColumn Size="8" Offset="4" class="rz-white rz-p-5">
                        </RadzenColumn>
                        <ValidationMessage For="()=>Saison.Aktuell"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <RadzenLabel Text="Label" class="col-sm-3 pl-0" Component="chkAbgeschlossen">Abgeschlossen</RadzenLabel>
                        <RadzenCheckBox @bind-Value="Saison.Abgeschlossen" Style="border-width:0px; width:40px;max-width:40px;" class="form-control col-sm-9" Name="chkAbgeschlossen" />
                        <RadzenColumn Size="8" Offset="4" class="rz-white rz-p-5">
                        </RadzenColumn>
                        <ValidationMessage For="()=>Saison.Abgeschlossen"></ValidationMessage>
                    </div>

                    <div class="form-group py-2">
                        <RadzenButton title="Speichert Saison ab" style="margin-left:5px;" id="btnSpeichern" Click="UpsertSaison" class="btn btn-primary" Text="Speichern">
                            <span class="glyphicon glyphicon-save"></span>Speichern
                        </RadzenButton>
                        
                        <RadzenButton title="Zurück zu Saisonenübersicht" style="margin-left:5px;" Click="Zurueck_Click" id="btnSpeichern" class="btn btn-secodary" Text="Zurück">

                        </RadzenButton>
                    </div>
                </details>
            </div>
        </EditForm>
        <div class="tabs">
            <details name="tab">
                <summary> Vereine zuordnen</summary>
                <div class="form-group">
                    <ul class="ul">
                        @foreach (var verein in VereineList.OrderBy(x => x.Vereinname1))
                        {
                            string Id = @verein.VereinID;
                            <li><input @onchange="eventArgs => { CheckboxClicked(Id, eventArgs.Value); }" checked="@verein.VereinChecked"  data-bind=" @verein.VereinID" class="col-sm-2" type="checkbox"><span>@verein.Vereinname1</span></li>
                        }

                    </ul>
                </div>
                <div class="form-group">
                    <ul class="ul">
                        @foreach (var verein in VereineSaisonList.OrderBy(x => x.Vereinname1))
                        {
                            string Id = @verein.VereinID;
                            <li><input data-bind=" @verein.VereinID" class="col-sm-4" type="checkbox"><span>@verein.Vereinname1</span></li>
                        }
                    </ul>
                </div>                               
                <button onclick="Zuordnen" id="btnModalPopup" class="btn btn-primary"><span class="glyphicon glyphicon-save"></span>Vereine zuordnen</button>
            </details>
        </div>

        

        
    </div>
</div>

@code {
    [Parameter]   
    public string Titel { get; set; }
    public bool IsLoading { get; set; }
    public IEnumerable<Saison> SaisonenMax { get; set; }
    protected override void OnParametersSet()
    {
        if (Id == "0")
        {
            //Neuanlage
            Titel = "Saison Neuanlage";

        }
        else
        {
            //Bearbeiten
            Titel = "Saison Bearbeiten";
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id == "0" )
            {
                //Neuanlage
                Id = "0";
                IsLoading = false;
            }
            else
            {
                //Bearbeiten
                await LoadSaison();
            }
        }
    }

    private async Task LoadSaison()
    {
        IsLoading = true;
        StateHasChanged();
        Saison = await _SaisonenService.GetSaison(Convert.ToInt32(Id));
        IsLoading = false;
        StateHasChanged();
    }
    private async Task UpsertSaison()
    {
        if (Id == "0")
        {
            Saison.LigaID = Convert.ToInt32(Globals.currentLiga);
            Saison.Liganame = Liganame;
            //create
            await _SaisonenService.CreateSaison(Saison);
        }
        else
        {
            //update
            await _SaisonenService.UpdateSaison(Saison);
        }
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Bearbeiten Saison", Detail = "Abgespeichert" });
        // _navigationManager.NavigateTo("saisonen");
    }

    private void Zurueck_Click()
    {
        _navigationManager.NavigateTo("/saisonen");
    }
}
