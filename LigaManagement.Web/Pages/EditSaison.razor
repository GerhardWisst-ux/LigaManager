@page "/Ligamanager/editsaison/{Id}"
@inherits LigaManagerManagement.Web.Pages.SaisonenListBase
@inject LigaManagement.Web.Services.Contracts.ISaisonenService _SaisonenService
@inject LigaManagement.Web.Services.Contracts.IVereineSaisonService _VereineSaisonService

@inject DialogService DialogService
@inject NavigationManager _navigationManager
@inject NotificationService _NotificationService

<head>
   @*  <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script> *@
    <link href='https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/ui-darkness/jquery-ui.css' rel='stylesheet'>

</head>>

<script type="text/javascript">
    // $(document).ready(function () {
    //     $("#previewDiv :input").attr("disabled", true);
    // });
</script>

<style type="text/css">

    input[name=checkvereindisabled] {
        pointer-events: none;
    }

    input[name=txtSaisonnameDisabled] {
        pointer-events: none;
    }

    select[name=cboLigaDisabled] {
        pointer-events: none;
    }

    .rz-chkbox-box {
        border-color: darkgray !important;
    }
</style>
@if (LigenList == null)
{
    <RadzenStack AlignItems="AlignItems.Center" Class="rz-m-12" Gap="2rem">
        <RadzenProgressBarCircular Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
    </RadzenStack>
}
else
{
    <EditForm Model="Saison" OnValidSubmit="SaveSaison">
        <RadzenSteps Change="@OnChange" CanChange="@CanChange">
            <Steps>
                <RadzenStepsItem PreviousText="@Localizer["Voriger Schritt"].Value" NextText="@Localizer["Nächster Schritt"].Value">
                    <RadzenRow>
                        <RadzenLabel Text="Grunddaten" class="col-sm-3 pl-0">@Localizer["Grunddaten"].Value</RadzenLabel>
                    </RadzenRow>
                    <br />
                    <div class="form-group-row pt-2">
                        @if (Id == null)
                        {
                            <RadzenLabel Text="Saisonname" class="col-sm-3 pl-0" Component="txtSaisonname">Saisonname</RadzenLabel>
                            <RadzenTextBox required name="txtSaisonname" id="txtSaisonname" @bind-Value="Saison.Saisonname" class="form-control col-9"></RadzenTextBox>
                        }
                        else
                        {
                            <RadzenLabel Text="Saisonname" class="col-sm-3 pl-0" Component="txtSaisonnameDisabled">Saisonname</RadzenLabel>
                            <RadzenTextBox required name="txtSaisonnameDisabled" id="txtSaisonnameDisabled" @bind-Value="Saison.Saisonname" class="form-control col-9"></RadzenTextBox>
                        }
                        <ValidationMessage For="()=>Saison.Saisonname"></ValidationMessage>
                    </div>
                    <div class="form-group-row pt-2">
                        @if (Id == null)
                        {
                            <RadzenLabel Text="@Localizer["Liganame"].Value" class="col-sm-3 pl-0" Component="cboLiga">@Localizer["Liganame"].Value</RadzenLabel>
                            <select id="cboLiga" name="cboLiga" class="form-control col-9 dropdown" @onchange="LigaChange">
                                @if (LigenList != null)
                                {
                                    @foreach (var liga in LigenList.OrderBy(o => o.LigaID))
                                    {
                                        <option value="@liga.LigaID"> @liga.Liganame</option>
                                    }
                                }
                            </select>
                        }
                        else
                        {
                            <RadzenLabel Text="@Localizer["Liganame"].Value" class="col-sm-3 pl-0" Component="cboLiga">@Localizer["Liganame"].Value</RadzenLabel>
                            <select id="cboLigaDisabled" name="cboLigaDisabled" class="form-control col-9 dropdown" @onchange="LigaChange">
                                @if (LigenList != null)
                                {
                                    @foreach (var liga in LigenList.OrderBy(o => o.LigaID))
                                    {

                                        @if (liga.LigaID == LigaID)
                                        {
                                            <option selected value="@liga.LigaID"> @liga.Liganame</option>
                                        }
                                        else
                                        {
                                            <option value="@liga.LigaID"> @liga.Liganame</option>
                                        }
                                    }
                                }
                            </select>
                        }
                        <label title="@Localizer["Bitte Liga wählen"].Value" style="display:@DisplayErrorLiga;color:red;" id="lblErrorLiga">@Localizer["Bitte Liga wählen"].Value</label>
                    </div>
                    <div class="form-group-row pt-2">
                        <RadzenLabel Text="AnzahlVereine" class="col-sm-3 pl-0" Component="txtVereinsname2">@Localizer["Anzahl Vereine"].Value</RadzenLabel>
                        <InputNumber required id="txtAnzahlVereine" @bind-Value="Saison.AnzahlVereine" class="form-control col-sm-9"></InputNumber>
                        <ValidationMessage For="()=>Saison.AnzahlVereine"></ValidationMessage>
                    </div>
                    <div class="form-group my-5">
                        <RadzenLabel Text="@Localizer["Aktuell"].Value" class="col-sm-3 pl-0 my-3" Component="chkAktuell">@Localizer["Aktuell"].Value</RadzenLabel>
                        <RadzenCheckBox @bind-Value="Saison.Aktuell" Style="border-width:0px; width:40px;max-width:40px;margin-left:0px;" class="form-control col-sm-9" Name="chkAktuell" />
                        <InputNumber id="txtPlatzhalter" @bind-Value="Saison.AnzahlVereine" style="visibility:hidden;" class="form-control col-sm-8"></InputNumber>
                        <ValidationMessage For="()=>Saison.Aktuell"></ValidationMessage>
                    </div>
                    <div class="form-group my-5">
                        <RadzenLabel Text="@Localizer["Abgeschlossen"].Value" class="col-sm-3 pl-0 my-3" Component="chkAbgeschlossen">@Localizer["Abgeschlossen"].Value</RadzenLabel>
                        <RadzenCheckBox @bind-Value="Saison.Abgeschlossen" Style="border-width:0px; width:40px;max-width:40px;margin-left:0px;" class="form-control col-sm-9" Name="chkAbgeschlossen" />
                        <InputNumber id="txtPlatzhalter2" @bind-Value="Saison.AnzahlVereine" style="visibility:hidden;" class="form-control col-sm-8"></InputNumber>
                        <ValidationMessage For="()=>Saison.Abgeschlossen"></ValidationMessage>
                    </div>
                    <div class="form-group my-5" >
                        <RadzenButton class="col-sm-3 pl-0 mt-4" Text="@Localizer["Speichern"].Value" Click="@SaveGrunddaten" />
                        <RadzenButton class="col-sm-9 pl-0 mt-4" Text="@Localizer["Speichern"].Value" style="visibility:hidden;" Click="@SaveGrunddaten" />
                    </div>

                </RadzenStepsItem>
                <RadzenStepsItem PreviousText="@Localizer["Voriger Schritt"].Value" NextText="@Localizer["Nächster Schritt"].Value">
                    <RadzenRow>
                        <RadzenRow>
                            <RadzenLabel Text="@Localizer["Vereine zuordnen"].Value" class="col-sm-12 pl-0">@Localizer["Vereine zuordnen"].Value</RadzenLabel>
                        </RadzenRow>
                        <br />
                        <br />
                    </RadzenRow>
                    <div class="form-group">
                        <ul class="ul">
                            @foreach (var verein in VereineList.OrderBy(x => x.Vereinname1).OrderByDescending(x => x.VereinChecked))
                            {
                                string Id = @verein.VereinID;
                                <li><input @onchange="eventArgs => { CheckboxClicked(Id, eventArgs.Value); }" name="checkvereindisabled" checked="@verein.VereinChecked" data-bind=" @verein.VereinID" class="col-sm-2" type="checkbox"><span>@verein.Vereinname1</span></li>
                            }
                        </ul>
                    </div>
                </RadzenStepsItem>
                <RadzenStepsItem PreviousText="@Localizer["Voriger Schritt"].Value" NextText="@Localizer["Nächster Schritt"].Value">
                    <RadzenRow>
                        <RadzenLabel Text="@Localizer["Zusammenfassung"].Value" class="col-sm-3 pl-0">@Localizer["Zusammenfassung"].Value</RadzenLabel>
                    </RadzenRow>
                    <br />
                    <br />
                    <div class="form-group">
                        @if (Id == null)
                        {
                            <RadzenLabel Text="@Localizer["Saisonname"].Value" class="col-sm-3 pl-0" Component="txtSaisonname">@Localizer["Saisonname"].Value</RadzenLabel>
                            <RadzenTextBox required name="txtSaisonname" id="txtSaisonname" @bind-Value="Saison.Saisonname" class="form-control col-9"></RadzenTextBox>
                        }
                        else
                        {
                            <RadzenLabel Text="@Localizer["Saisonname"].Value" class="col-sm-3 pl-0" Component="txtSaisonnameDisabled">@Localizer["Saisonname"].Value</RadzenLabel>
                            <RadzenTextBox required name="txtSaisonnameDisabled" id="txtSaisonnameDisabled" @bind-Value="Saison.Saisonname" class="form-control col-9"></RadzenTextBox>
                        }
                        <ValidationMessage For="()=>Saison.Saisonname"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <RadzenLabel Text="Liganame" class="col-sm-3 pl-0" Component="cboLigaDisabled">Liganame</RadzenLabel>
                        @if (Id == null)
                        {
                            <select id="cboLiga" name="cboLiga" class="form-control col-9 dropdown" @onchange="LigaChange">
                                <option value="0" required>@Localizer["Liga auswählen"].Value</option>
                                @if (LigenList != null)
                                {
                                    @foreach (var liga in LigenList.OrderBy(o => o.LigaID))
                                    {

                                        @if (liga.LigaID == LigaID)
                                        {
                                            <option selected value="@liga.LigaID"> @liga.Liganame</option>
                                        }
                                        else
                                        {
                                            <option value="@liga.LigaID"> @liga.Liganame</option>
                                        }
                                    }
                                }
                            </select>
                        }
                        else
                        {
                            <select id="cboLigaDisabled" name="cboLigaDisabled" class="form-control col-9 dropdown" @onchange="LigaChange">

                                <option value="0" required>@Localizer["Liga auswählen"].Value</option>
                                @if (LigenList != null)
                                {
                                    @foreach (var liga in LigenList.OrderBy(o => o.LigaID))
                                    {
                                        @if (liga.LigaID == LigaID)
                                        {
                                            <option selected value="@liga.LigaID"> @liga.Liganame</option>
                                        }
                                        else
                                        {
                                            <option value="@liga.LigaID"> @liga.Liganame</option>
                                        }
                                    }
                                }
                            </select>
                        }
                        <label title="@Localizer["Bitte Liga wählen"].Value" style="display:@DisplayErrorLiga;color:red;" id="lblErrorLiga">@Localizer["Bitte Liga wählen"].Value</label>

                    </div>
                    <div class="form-group">
                        <RadzenLabel Text="@Localizer["Anzahl Vereine"].Value" class="col-sm-3 pl-0" Component="txtAnzahlVereine">@Localizer["Anzahl Vereine"].Value</RadzenLabel>
                        <InputNumber required id="txtAnzahlVereine" @bind-Value="Saison.AnzahlVereine" class="form-control col-sm-9"></InputNumber>
                        <ValidationMessage For="()=>Saison.AnzahlVereine"></ValidationMessage>
                    </div>
                    <div class="form-group pt-2">
                        <RadzenLabel Text="@Localizer["Aktuell"].Value" class="col-sm-3 pl-0" Component="chkAktuell">@Localizer["Aktuell"].Value</RadzenLabel>
                        <RadzenCheckBox @bind-Value="Saison.Aktuell" Style="border-width:0px; width:40px;max-width:40px;margin-left:0px;" class="form-control col-sm-9" Name="chkAktuell" />
                        <InputNumber id="txtPlatzhalter3" @bind-Value="Saison.AnzahlVereine" style="visibility:hidden;" class="form-control col-sm-8"></InputNumber>
                        <ValidationMessage For="()=>Saison.Aktuell"></ValidationMessage>
                    </div>

                    <div class="form-group pt-2">
                        <RadzenLabel Text="@Localizer["Abgeschlossen"].Value" class="col-sm-3 pl-0" Component="chkAbgeschlossen">@Localizer["Abgeschlossen"].Value</RadzenLabel>
                        <RadzenCheckBox @bind-Value="Saison.Abgeschlossen" Style="border-width:0px; width:40px;max-width:40px;margin-left:0px;" class="form-control col-sm-9" Name="chkAbgeschlossen" />
                        <InputNumber id="txtPlatzhalter4" @bind-Value="Saison.AnzahlVereine" style="visibility:hidden;" class="form-control col-sm-8"></InputNumber>
                        <ValidationMessage For="()=>Saison.Abgeschlossen"></ValidationMessage>
                    </div>

                    <div class="form-group pt-2">
                        <RadzenRow>
                            <RadzenLabel Text="@Localizer["Vereine"].Value" class="col-sm-3 pl-0">Vereine</RadzenLabel>
                        </RadzenRow>
                    </div>

                    <div class="form-group pt-2">
                        <ul class="ul">
                            @foreach (var verein in VereineList.OrderBy(x => x.Vereinname1).OrderByDescending(x => x.VereinChecked))
                            {
                                string Id = @verein.VereinID;
                                <li><input @onchange="eventArgs => { CheckboxClicked(Id, eventArgs.Value); }" name="checkvereindisabled" checked="@verein.VereinChecked" data-bind=" @verein.VereinID" class="col-sm-2" type="checkbox"><span>@verein.Vereinname1</span></li>
                            }
                        </ul>
                    </div>
                    @* <div class="form-group">
                <ul class="ul">
                @foreach (var verein in VereineSaisonList.OrderBy(x => x.Vereinname1))
                {
                string Id = @verein.VereinID;
                <li><input data-bind=" @verein.VereinID" class="col-sm-4" type="checkbox"><span>@verein.Vereinname1</span></li>
                }
                </ul>
                </div> *@
                    <RadzenButton Text="@Localizer["Speichern"].Value" id="btnSaveSaison" Click="@SaveSaison" />
                </RadzenStepsItem>
            </Steps>
        </RadzenSteps>
    </EditForm>
}
@code {
    public string Titel { get; set; }
    public bool IsLoading { get; set; }
    private string saison;
    private string savedSaison;

    private string liganame;
    private string savedliganame;

    private string aboutMe;
    private string savedAboutMe;


    private void OnChange()
    {
        saison = savedSaison;
        liganame = savedliganame;

    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id == null)
            {
                //Neuanlage
                Id = "0";
                IsLoading = false;
            }
            else
            {
                //Bearbeiten
                await LoadSaison();
            }
        }
    }

    private async Task LoadSaison()
    {
        IsLoading = true;
        Saison = await _SaisonenService.GetSaison(Convert.ToInt32(Id));
        IsLoading = false;
        StateHasChanged();
    }

    private async Task CanChange(StepsCanChangeEventArgs args)
    {
        if (args.SelectedIndex == 0 && liganame == null)
        {
            return;
        }

        if (args.SelectedIndex == 1 && vereinesaison.Count() != Saison.AnzahlVereine)
        {
            return;
        }

    }

    private void SaveGrunddaten()
    {
        savedSaison = saison;
        savedliganame = liganame;
    }

    private void SaveAboutMe()
    {
        savedAboutMe = aboutMe;
    }

    private async void SaveSaison()
    {

        if ((VereineSaisonList.Count() != Saison.AnzahlVereine))
        {
            _NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Bearbeiten Saison", Detail = "Es sind keine " + Saison.AnzahlVereine + " Vereine angegeben. Speichern nicht möglich." });
            return;
        }
        LigaManagerManagement.Models.Saison SaisonenServiceCreated;
        Saison.LigaID = Convert.ToInt32(Globals.currentLiga);

        var liga = await LigaService.GetLiga(Convert.ToInt32(Globals.currentLiga));
        Saison.Liganame = liga.Liganame;

        SaisonenServiceCreated = await _SaisonenService.UpdateSaison(Saison);

        _navigationManager.NavigateTo("saisonen");
    }
}

