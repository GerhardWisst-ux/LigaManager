@page "/kader"
@using LigaManagerManagement.Web.Pages;
@using LigaManagerManagement.Models;
@inherits KaderBase
@using Radzen;
@using Radzen.Blazor;

@attribute [Authorize]

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="~/css/material-base.css" />
</head>

@if (SpielerList == null)
{
    <div class="spinner"></div>
}
else
{
    <div class="container">
        <div class="form-group row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-body">
                        <h2 style="display:inline-block;">Kader </h2>

                        <span class="ml-3">
                            <a href="createkaderspieler" style="display:@VisibleAdd;width:40px;" class="btn btn-primary form-control"><span class="glyphicon">&#x2b;</span></a>
                        </span>
                    </div>
                </div>                
                <div class="row">
                    <div class="col-sm mt-2">
                        <select id="cboSaison" class="form-control dropdown" @onchange="SaisonChange">
                            <option value="" selected required>Saison auswählen</option>
                            @foreach (var saison in SaisonenList.OrderByDescending(o => o.Saisonname))
                            {
                                <option value="@saison.Saisonname"> @saison.Saisonname </option>
                            }
                            <label style="display:@DisplayErrorSaison;color:red;" id="lblErrorSaison">Saison auswählen</label>
                        </select>
                    </div>
                    <div class="col-sm mt-2">
                        <select id="cboVerein" class="form-control dropdown" @onchange="VereinChange">
                            <option value="" selected required>Verein auswählen</option>
                            @foreach (var verein in VereineList.OrderBy(o => o.Vereinname1))
                            {
                                <option value="@verein.VereinID"> @verein.Vereinname1 </option>
                            }
                        </select>
                        <label style="display:@DisplayErrorVerein;color:red;" id="lblErrorVerein">Verein auswählen</label>
                    </div>
                    <div class="col-sm mt-2">
                        <linkbutton title="Saison und Verein auswählen" style="margin-left:5px;" id="btnUebernehmen" class="btn btn-primary" @onclick=OnClickHandler>
                            Auswählen
                        </linkbutton>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-sm-12">
                @if (bShowSpieler)
                {
                    int i;
                    <RadzenDataGrid @ref="grid" Data="@SpielerList" class="table table-striped" FilterMode="FilterMode.Simple" PageSize="30"
                                    AllowPaging="true" AllowSorting="true" AllowMultiColumnSorting="true" AllowFiltering="true"
                                    TItem="Kader" Visible="true" AllowColumnResize="true"
                                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    LogicalFilterOperator="LogicalFilterOperator.Or" Filter="@OnFilter" CellRender="OnCellRender">
                        <Columns>
                            <RadzenDataGridColumn TItem="Saison" Property="ID" Title="ID">
                                <FooterTemplate>
                                    Saisonen: <b>@grid.View.Count()</b> von <b>@SaisonenList.Count()</b>
                                </FooterTemplate>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="Kader" Property="Rueckennummer" Width="50px" TextAlign="TextAlign.Right" Filterable="false" Sortable=true Title="Nr" />
                            <RadzenDataGridColumn TItem="Kader" Property="SpielerName" Width="400px" Sortable=true Title="Name" SortOrder="SortOrder.Ascending"
                                                  SortProperty="SpielerName" />
                            <RadzenDataGridColumn TItem="Kader" Property="Vorname" Width="400px" Sortable=true Title="Vorname" SortOrder="SortOrder.Ascending"
                                                  SortProperty="Vorname" />


                            <RadzenDataGridColumn TItem="Kader" Property="Einsaetze" Width="80px" TextAlign="TextAlign.Center" Sortable=true Title="Einsätze" />
                            <RadzenDataGridColumn TItem="Kader" Property="Tore" Width="80px" TextAlign="TextAlign.Right" Title="Tore" Sortable=true SortOrder="SortOrder.Ascending"
                                                  SortProperty="Tore" />

                            <RadzenDataGridColumn TItem="Kader" Property="ID" Width="100px" Filterable="false" Sortable="false">
                                <Template Context="data">
                                    <NavLink href="@($"editkaderspieler/{data.Id}")" class="btn-primary btn"><span class="glyphicon glyphicon-edit"></span> Bearbeiten</NavLink>
                                </Template>
                            </RadzenDataGridColumn>
                        </Columns>


                    </RadzenDataGrid>

                }
            </div>
        </div>
    </div>
    <div class="col-1 offset-11">
        <button onclick="topFunction()" id="btnTop" class="btn btn-primary" title="Nach oben" style='font-size:14px;display:@DisplayElements;'><span class="glyphicon glyphicon-arrow-up"></span></button>
    </div>

    <script>

        let mybutton = document.getElementById("btnTop");

        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function () { scrollFunction() };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                mybutton.style.display = "block";
            } else {
                mybutton.style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
    </script>

}