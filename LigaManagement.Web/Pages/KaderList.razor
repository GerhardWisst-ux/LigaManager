@page "/kader"
@using LigaManagerManagement.Web.Pages;
@using LigaManagerManagement.Models;
@inherits KaderBase
@using Radzen;

@attribute [Authorize]

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
</head>

<style type="text/css">

    .rz-datatable tr {
        min-height: 8%;
        word-break: break-all;
    }
</style>

@if (SpielerList == null)
{
    <div class="spinner"></div>
}
else
{

    <div class="container">
        <div class="form-group row">
            <div class="col-sm-12">
                <RadzenCard class="m-0">
                    <div class="d-flex flex-row">
                        <div class="card-body">
                            <h2 style="display:inline-block;">Kader</h2>
                            <span class="ml-3">
                                <a href="createkaderspieler" title="Neuer Spieler" style="width:40px;" class="btn btn-primary btn-sm form-control"><span class="glyphicon">&#x2b;</span></a>
                            </span>
                        </div>
                    </div>
                </RadzenCard>
            </div>
        </div>
        <div class="form-group row">
            <label for="cboSaison" class="col-sm-1 control-label">Saison</label>
            <div class="col-sm-4 m-0">
                <select id="cboSaison" style="display:inline-block; " class="form-control dropdown" @onchange="SaisonChange">
                    <option selected="selected">Saison auswählen</option>
                    @foreach (var verein in SaisonenList.OrderBy(x => x.SaisonID))
                    {
                        <option value="@verein.SaisonID"> @verein.Saisonname </option>
                    }
                    <label title="Bitte Saison wählen" style="display:@DisplayErrorSaison;color:red;" id="lblErrorLiga">Bitte Liga wählen</label>
                </select>
            </div>
            <label title="Bitte Saison wählen" style="display:@DisplayErrorSaison;color:red;" id="lblErrorLiga">Bitte Saison wählen</label>

            <label for="cboSaison" class="col-sm-1 control-label m-0">Verein</label>
            <div class="col-sm-4 m-0">
                <select id="cboSaison" style="display:inline-block;" class="form-control dropdown" @onchange="VereinChange">
                    <option value="" selected required>Verein auswählen</option>
                    @foreach (var verein in VereineList.OrderBy(o => o.Vereinname1))
                    {
                        <option value="@verein.VereinID"> @verein.Vereinname1 </option>
                    }
                </select>
                <label title="Bitte Verein wählen" style="display:@DisplayErrorVerein;color:red;" id="lblErrorVerein">Bitte Verein wählen</label>
            </div>
            <div class="col-sm-2 m-0 pull-right">
                <linkbutton title="Saison und Verein auswählen" style="display:inline-block;" id="btnUebernehmen" class="btn btn-primary" @onclick=OnClickHandler>
                    Auswählen
                </linkbutton>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-12">
                @if (bShowSpieler)
                {
                    var spielerList = SpielerList.OrderByDescending(x => x.Tore).ThenBy(x => x.PositionsNr);

                    <RadzenDataGrid @ref="grid" Data="@spielerList" class="table table-striped" FilterMode="FilterMode.Simple" PageSize="30"
                                    AllowPaging="true" Responsive=true AllowSorting="true" AllowMultiColumnSorting="true" AllowFiltering="true"
                                    TItem="Kader" Visible="true" AllowColumnResize="true"
                                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    LogicalFilterOperator="LogicalFilterOperator.Or" Filter="@OnFilter" CellRender="OnCellRender">
                        <Columns>
                            <RadzenDataGridColumn TItem="Saison" Property="ID" Title="ID">
                                <FooterTemplate>
                                    Spieler: <b>@grid.View.Count()</b> von <b>@spielerList.Count()</b>
                                </FooterTemplate>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="Kader" Property="PositionsNr" Width="8%" TextAlign="TextAlign.Right" SortOrder="SortOrder.Ascending" Sortable=true Title="Pos" />
                            <RadzenDataGridColumn TItem="Kader" Property="Rueckennummer" Width="8%" TextAlign="TextAlign.Right" Filterable="false" Sortable=true Title="Nr" />
                            <RadzenDataGridColumn TItem="Kader" Property="SpielerName" Width="24%" Sortable=true Title="Name" SortOrder="SortOrder.Ascending"
                                                  SortProperty="SpielerName" />
                            <RadzenDataGridColumn TItem="Kader" Property="Vorname" Width="24%" Sortable=true Title="Vorname" SortOrder="SortOrder.Ascending"
                                                  SortProperty="Vorname" />
                            <RadzenDataGridColumn TItem="Kader" Property="Einsaetze" Width="8%" TextAlign="TextAlign.Right" Title="Spiele" Sortable=true SortProperty="Einsaetze" />
                            <RadzenDataGridColumn TItem="Kader" Property="Tore" Width="7%" TextAlign="TextAlign.Right" Title="Tore" Sortable=true SortProperty="Tore" />
                            <RadzenDataGridColumn TextAlign="TextAlign.Right" TItem="Kader" Property="Id" Width="5%" Filterable="false" Sortable="false">
                                <Template Context="data">
                                    <NavLink href="@($"editkaderspieler/{data.Id}")" title="Bearbeiten" class="btn btn-primary btn-sm"><span class="glyphicon glyphicon-edit"></span></NavLink>
                                </Template>
                            </RadzenDataGridColumn>
                        </Columns>


                    </RadzenDataGrid>
                    <RadzenRow Wrap="FlexWrap.NoWrap" class="rz-white">
                        <RadzenColumn Offset="11" Style="text-align:right;">
                            <button onclick="topFunction()" id="btnTop" class="btn btn-primary" title="Nach oben" style='font-size:14px; display:true;'><span class="glyphicon glyphicon-arrow-up"></span></button>
                        </RadzenColumn>
                    </RadzenRow>

                }
            </div>
        </div>
    </div>

    <script>

        let mybutton = document.getElementById("btnTop");

        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function () { scrollFunction() };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                mybutton.style.display = "block";
            } else {
                mybutton.style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
    </script>

}
