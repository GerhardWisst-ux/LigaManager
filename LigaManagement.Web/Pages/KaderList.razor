@page "/Ligamanager/kader"
@using LigaManagerManagement.Web.Pages;
@using LigaManagerManagement.Models;
@inherits KaderBase
@inject NavigationManager _navigationManager
@using Radzen;

@attribute [Authorize]

<head>
    
    
</head>

<style type="text/css">

    .rz-datatable tr {
        min-height: 8%;
        word-break: break-all;
    }
</style>

@if (SpielerList == null)
{
    <RadzenStack AlignItems="AlignItems.Center" Class="rz-m-12" Gap="2rem">
        <RadzenProgressBarCircular Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
    </RadzenStack>
}
else
{

    <div class="container">
        <div class="form-group row">
            <div class="col-sm-12">
                <RadzenCard class="m-0 rz-shadow-3">
                    <div class="d-flex flex-row">
                        <div class="card-body">
                            <h2 style="display:inline-block;">@Localizer["Kader"].Value</h2>
                            <span class="ml-3">                                
                                @* <RadzenLink Path="createkaderspieler" Visible="@VisibleAdd" style="width:40px;" title="Neuer Spieler" class="btn btn-primary btn-sm"><span class="glyphicon">&#x2b;</span></RadzenLink> *@

                                <RadzenButton Click=@(args => OnClick("Primary icon button"))  Visible="@VisibleAdd" Icon="add_circle_outline" title="@Localizer["Neuer Spieler"].Value" ButtonStyle="ButtonStyle.Primary" />
                            </span>
                        </div>
                    </div>
                </RadzenCard>
            </div>
        </div>
        <div class="form-group row">
            <label for="cboSaison" class="col-sm-1 control-label">@Localizer["Saison"].Value</label>
            <div class="col-sm-4 m-0">
                <select id="cboSaison" style="display:inline-block; " class="form-control dropdown" @onchange="SaisonChange">
                    <option selected="selected">@Localizer["Saison auswählen"].Value</option>
                    @foreach (var verein in SaisonenList.OrderByDescending(x => x.Saisonname))
                    {
                        <option value="@verein.SaisonID"> @verein.Saisonname </option>
                    }
                    <label title="@Localizer["Bitte Liga wählen"].Value" style="display:@DisplayErrorSaison;color:red;" id="lblErrorLiga">@Localizer["Bitte Liga wählen"].Value</label>
                </select>
            </div>
            <label title="@Localizer["Bitte Saison wählen"].Value" style="display:@DisplayErrorSaison;color:red;" id="lblErrorLiga">@Localizer["Bitte Saison wählen"].Value</label>

            <label for="cboSaison" class="col-sm-1 control-label m-0">@Localizer["Verein"].Value</label>
            <div class="col-sm-4 m-0">
                <select id="cboSaison" style="display:inline-block;" class="form-control dropdown" @onchange="VereinChange">
                    <option value="" selected required>@Localizer["Verein auswählen"].Value</option>
                    @foreach (var verein in VereineList.OrderBy(o => o.Vereinname1))
                    {
                        <option value="@verein.VereinID"> @verein.Vereinname1 </option>
                    }
                </select>
                <label title="Bitte Verein wählen" style="display:@DisplayErrorVerein;color:red;" id="lblErrorVerein">@Localizer["Bitte Verein wählen"].Value</label>
            </div>
            <div class="col-sm-2 m-0 pull-right">
                @* <linkbutton title="Saison und Verein auswählen" style="display:inline-block;" id="btnUebernehmen" class="btn btn-primary" @onclick=OnClickHandler>
                    Auswählen
                </linkbutton> *@

                <RadzenButton title="@Localizer["Saison und Verein auswählen"].Value" style="margin-left:5px;" id="btnUebernehmen" Click="OnClickHandler" class="btn btn-primary" Text="@Localizer["Bitte Verein wählen"].Value">
                    <span class="oi checkmark-done-outline"></span>@Localizer["Auswählen"].Value
                </RadzenButton>
                
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-12">
                @if (bShowSpieler)
                {
                    var spielerList = SpielerList.OrderByDescending(x => x.Tore).ThenBy(x => x.PositionsNr);

                    <RadzenDataGrid @ref="grid" Data="@spielerList" class="table table-striped" FilterMode="FilterMode.Simple" PageSize="15"
                                    AllowPaging="true" Responsive=true AllowSorting="true" AllowFiltering="true"
                                    TItem="Kader" Visible="true" AllowColumnResize="true"
                                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    LogicalFilterOperator="LogicalFilterOperator.Or" Filter="@OnFilter">
                        <Columns>
                            <RadzenDataGridColumn TItem="Saison" Property="ID" Title="ID">                             
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="Kader" Property="PositionsNr" Width="8%" TextAlign="TextAlign.Right" SortOrder="SortOrder.Ascending" Sortable=true Title="Pos" />
                            <RadzenDataGridColumn TItem="Kader" Property="Rueckennummer" Width="8%" TextAlign="TextAlign.Right" Filterable="false" Sortable=true Title="Nr" />
                            <RadzenDataGridColumn TItem="Kader" Property="SpielerName" Title="@Localizer["SpielerName"].Value" Width="24%" Sortable=true SortOrder="SortOrder.Ascending"
                                                  SortProperty="SpielerName" />
                            <RadzenDataGridColumn TItem="Kader" Property="Vorname" Width="24%" Sortable=true Title="@Localizer["SpielerVorname"].Value" SortOrder="SortOrder.Ascending"
                                                  SortProperty="Vorname" />
                            <RadzenDataGridColumn TItem="Kader" Property="Einsaetze" Width="8%" TextAlign="TextAlign.Right" Title="@Localizer["Spiele"].Value" Sortable=true SortProperty="Einsaetze" />
                            <RadzenDataGridColumn TItem="Kader" Property="Tore" Width="7%" TextAlign="TextAlign.Right" Title="@Localizer["Tore"].Value" Sortable=true SortProperty="Tore" />
                            <RadzenDataGridColumn TextAlign="TextAlign.Right" TItem="Kader" Property="Id" Width="5%" Filterable="false" Sortable="false">
                                <Template Context="data">
                                    <NavLink href="@($"Ligamanager/editkaderspieler/{data.Id}")" title="@Localizer["Bearbeiten"].Value" class="btn btn-primary btn-sm"><div><RadzenIcon Icon="launch" /><span></span></div></NavLink>
                                </Template>
                            </RadzenDataGridColumn>

                        </Columns>
                        <FooterTemplate>
                        </FooterTemplate>
                        <FooterTemplate>
                            @Localizer["Anzahl Spieler"].Value: <b>@spielerList.Count()</b>
                        </FooterTemplate>
                    </RadzenDataGrid>
                    <RadzenRow Wrap="FlexWrap.NoWrap" class="rz-white">
                        <RadzenColumn Offset="11" Style="text-align:right;">
                            <button onclick="topFunction()" id="btnTop" class="btn btn-primary btn-sm" title="@Localizer["Nach oben"].Value" style='font-size:12px'><div><RadzenIcon Icon="open_in_browser" /><span></span></div></button>
                        </RadzenColumn>
                    </RadzenRow>

                }
            </div>
        </div>
    </div>

    @code {
    private void OnClick(string text)
    {
        _navigationManager.NavigateTo("Ligamanager/createkaderspieler");
    }
    }

    <script>

        let mybutton = document.getElementById("btnTop");

        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function () { scrollFunction() };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                mybutton.style.display = "block";
            } else {
                mybutton.style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
    </script>

}
