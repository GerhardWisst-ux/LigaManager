@page "/createsaison2"
@inherits LigaManagerManagement.Web.Pages.SaisonenListBase
@inject LigaManagement.Web.Services.Contracts.ISaisonenService _SaisonenService
@inject LigaManagement.Web.Services.Contracts.IVereineService _VereineService
@inject DialogService DialogService
@inject NavigationManager _navigationManager

<EditForm Model="Saison">
    <RadzenSteps Change="@OnChange" CanChange="@CanChange">
        <Steps>
            <RadzenStepsItem>
                <RadzenRow>
                    <RadzenText Text="Grunddaten" />
                </RadzenRow>
                <div class="form-group">
                    <RadzenLabel Text="Saisonname" class="col-sm-3 pl-0" Component="txtSaisonname">Saisonname</RadzenLabel>
                    <RadzenTextBox required id="txtSaisonname" @bind-Value="Saison.Saisonname" class="form-control col-9"></RadzenTextBox>
                    <ValidationMessage For="()=>Saison.Saisonname"></ValidationMessage>
                </div>
                <div class="form-group">
                    <RadzenLabel Text="Liganame" class="col-sm-3 pl-0" Component="cboLiga">Liganame</RadzenLabel>
                    <select id="cboLiga" class="form-control col-9 dropdown" @onchange="LigaChange">
                        <option value="@Convert.ToInt32(Globals.currentLiga)">@Liganame</option>
                        @if (LigenList != null)
                        {
                            @foreach (var liga in LigenList.OrderBy(o => o.LigaID))
                            {
                                <option value="@liga.LigaID"> @liga.Liganame </option>
                            }
                        }
                    </select>
                    <label title="Bitte Liga wählen" style="display:@DisplayErrorLiga;color:red;" id="lblErrorLiga">Bitte Liga wählen</label>
                </div>
                <div class="form-group">
                    <RadzenLabel Text="Aktuell" class="col-sm-3 pl-0" Component="chkAktiv">Aktuell</RadzenLabel>
                    <RadzenCheckBox @bind-Value="Saison.Aktuell" Style="border-width:0px;width:40px;max-width:40px;" class="form-control col-sm-1" Name="chkAktiv" />
                    <RadzenColumn Size="8" Offset="4" class="rz-white rz-p-5">
                    </RadzenColumn>
                    <ValidationMessage For="()=>Saison.Aktuell"></ValidationMessage>
                </div>

                <div class="form-group">
                    <RadzenLabel Text="Abgeschlossen" class="col-sm-3 pl-0" Component="chkAbgeschlossen">Abgeschlossen</RadzenLabel>
                    <RadzenCheckBox @bind-Value="Saison.Abgeschlossen" Style="border-width:0px; width:40px;max-width:40px;" class="form-control col-sm-9" Name="chkAbgeschlossen" />
                    <RadzenColumn Size="8" Offset="4" class="rz-white rz-p-5">
                    </RadzenColumn>
                    <ValidationMessage For="()=>Saison.Abgeschlossen"></ValidationMessage>
                </div>
            </RadzenStepsItem>
            <RadzenStepsItem>
                <RadzenRow>
                    <RadzenText Text="Vereine zuordnen" />
                </RadzenRow>
                <div class="form-group">
                    <ul class="ul">
                        @foreach (var verein in VereineList.OrderBy(x => x.VereinID))
                        {
                            string Id = @verein.VereinID;
                            <li><input @onchange="eventArgs => { CheckboxClicked(Id, eventArgs.Value); }" checked="@verein.VereinChecked" data-bind=" @verein.VereinID" class="col-sm-2" type="checkbox"><span>@verein.Vereinname1</span></li>
                        }

                    </ul>
                </div>
                <div class="form-group">
                    <ul class="ul">
                        @foreach (var verein in VereineSaisonList.OrderBy(x => x.Vereinname1))
                        {
                            string Id = @verein.VereinID;
                            <li><input data-bind=" @verein.VereinID" class="col-sm-4" type="checkbox"><span>@verein.Vereinname1</span></li>
                        }
                    </ul>
                </div>                
            </RadzenStepsItem>
            <RadzenStepsItem>
                <RadzenRow>
                    <RadzenText Text="Zusammenfassung" />
                </RadzenRow>
                <RadzenRow>
                    <RadzenText Text="Saison" />
                </RadzenRow>
                <div class="form-group">
                    <RadzenLabel Text="Saisonname" class="col-sm-3 pl-0" Component="txtSaisonname">Saisonname</RadzenLabel>
                    <RadzenTextBox required id="txtSaisonname" @bind-Value="Saison.Saisonname" class="form-control col-9"></RadzenTextBox>
                    <ValidationMessage For="()=>Saison.Saisonname"></ValidationMessage>
                </div>
                <div class="form-group">
                    <RadzenLabel Text="Liganame" class="col-sm-3 pl-0" Component="cboLiga">Liganame</RadzenLabel>
                    <select id="cboLiga" class="form-control col-9 dropdown" @onchange="LigaChange">
                        <option value="@Convert.ToInt32(Globals.currentLiga)">@Liganame</option>
                        @if (LigenList != null)
                        {
                            @foreach (var liga in LigenList.OrderBy(o => o.LigaID))
                            {
                                <option value="@liga.LigaID"> @liga.Liganame </option>
                            }
                        }
                    </select>
                </div>
                <div class="form-group">
                    <RadzenLabel Text="Aktuell" class="col-sm-3 pl-0" Component="chkAktiv">Aktuell</RadzenLabel>
                    <RadzenCheckBox @bind-Value="Saison.Aktuell" Style="border-width:0px;width:40px;max-width:40px;" class="form-control col-sm-1" Name="chkAktiv" />
                    <RadzenColumn Size="8" Offset="4" class="rz-white rz-p-5">
                    </RadzenColumn>
                    <ValidationMessage For="()=>Saison.Aktuell"></ValidationMessage>
                </div>

                <div class="form-group">
                    <RadzenLabel Text="Abgeschlossen" class="col-sm-3 pl-0" Component="chkAbgeschlossen">Abgeschlossen</RadzenLabel>
                    <RadzenCheckBox @bind-Value="Saison.Abgeschlossen" Style="border-width:0px; width:40px;max-width:40px;" class="form-control col-sm-9" Name="chkAbgeschlossen" />
                    <RadzenColumn Size="8" Offset="4" class="rz-white rz-p-5">
                    </RadzenColumn>
                    <ValidationMessage For="()=>Saison.Abgeschlossen"></ValidationMessage>
                </div>
                <RadzenRow>
                    <RadzenText Text="Vereine" />
                </RadzenRow>
                <div class="form-group">
                    <ul class="ul">
                        @foreach (var verein in vereinesaison.OrderBy(x => x.Vereinsname1))
                        {
                            <li><span>@verein.Vereinsname1</span></li>
                        }
                    </ul>
                </div>
                <RadzenButton Text="Speichern" Click="@SaveSaison" />
            </RadzenStepsItem>
        </Steps>
    </RadzenSteps>
</EditForm>
@code {
    private string name;
    private string savedName;

    private string address;
    private string savedAddress;

    private string aboutMe;
    private string savedAboutMe;

    private void OnChange()
    {
        name = savedName;
        address = savedAddress;
        aboutMe = savedAboutMe;

    }

    private async Task CanChange(StepsCanChangeEventArgs args)
    {
        if (args.SelectedIndex == 0 && Liganame == null )
        {
            return;
        }

        if (args.SelectedIndex == 1 && savedAboutMe == aboutMe)
        {
            return;
        }

        // var response = await DialogService.Confirm(
        //     "Are you sure you want to contine without saving?",
        //     "Confirm",
        //     new ConfirmOptions()
        //         {
        //             CloseDialogOnEsc = false,
        //             CloseDialogOnOverlayClick = false,
        //             ShowClose = false,
        //             CancelButtonText = "No",
        //             OkButtonText = "Yes",
        //         });

        // if (response == false)
        // {
        //     args.PreventDefault();
        // }
    }    

    private void SaveNameAndAdress()
    {
        savedName = name;
        savedAddress = address;
    }

    private void SaveAboutMe()
    {
        savedAboutMe = aboutMe;
    }

    private async void SaveSaison()
    {
        Saison.LigaID = Convert.ToInt32(Globals.currentLiga);

        var liga = await LigaService.GetLiga(Convert.ToInt32(Globals.currentLiga));
        Saison.Liganame = liga.Liganame;

        var SaisonenServiceCreated = await _SaisonenService.CreateSaison(Saison);

        List<VereineSaison> lstVereineSaison = new List<VereineSaison>();

        for (int i = 0; i < vereinesaison.Count -1; i++)
        {

            VereineSaison item = new VereineSaison();

            item.Id = i + 1;
            item.VereinNr = vereinesaison[i].VereinNr;
            item.SaisonID = SaisonenServiceCreated.SaisonID;
            item.LigaID = Convert.ToInt32(Globals.currentLiga);
            lstVereineSaison.Add(item);
        }                 

        await _VereineService.CreateVereineSaison(lstVereineSaison);

        _navigationManager.NavigateTo("saisonen");

    }

}

