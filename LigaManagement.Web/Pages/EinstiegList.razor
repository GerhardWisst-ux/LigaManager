@page "/Ligamanager"
@inherits EinstiegListBase

@attribute [Authorize]

@using LigaManagerManagement.Web.Pages;
@using Radzen;
@using Radzen.Blazor;
@using Radzen.Blazor.Rendering;

<head>
    <title>Bootstrap Example</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
</head>

<style>

</style>

<div class="container">
    
    <RadzenCard class="m-0 rz-shadow-3">
        <div class="d-flex flex-row">
            <div class="card-body">
                <h2 style="display:inline-block;">Start Ligamanager</h2>
            </div>
        </div>
    </RadzenCard>    

    <RadzenCard Style="height:70vh;" class="m-0">
        <RadzenTabs>
            <Tabs>
                <RadzenTabsItem class="p-0" Text="Auswahl">
                    <div class="form-group row">
                        <div class="dropdown mr-2" style="display:inline">
                            <select value="@LandID" id="cloLand" class="form-control dropdown" @onchange="LandChangeAsync">
                                <option value="0" required>Land auswählen</option>
                                @if (LaenderList != null)
                                {
                                    @foreach (var land in LaenderList.Where(x => x.Aktiv == true).OrderBy(o => o.LandID))
                                    {
                                        @if (land.Laendername == Globals.currentLand)
                                        {
                                            <option selected value="@land.LandID"> @land.Laendername </option>
                                        }
                                        else
                                        {
                                            <option value="@land.LandID"> @land.Laendername </option>
                                        }
                                    }
                                }
                            </select>
                            <label for="cboLiga" title="Bitte Liga wählen" style="display:@DisplayErrorLiga;color:red;" id="lblErrorLiga">Bitte Liga wählen</label>
                        </div>
                        <div class="dropdown mr-2" style="display:inline">
                            <select value="@LigaID" id="cboLiga" class="form-control dropdown" @onchange="LigaChangeAsync">
                                <option value="0" required>Liga auswählen</option>
                                @if (LigenList != null)
                                {
                                    @foreach (var liga in LigenList.Where(x => x.Aktiv == true).OrderBy(o => o.LigaID))
                                    {
                                        @if (liga.Liganame == Globals.currentLiga)
                                        {
                                            <option selected value="@liga.LigaID"> @liga.Liganame </option>
                                        }
                                        else
                                        {
                                            <option value="@liga.LigaID"> @liga.Liganame </option>
                                        }
                                    }
                                }
                            </select>
                            <label for="cboLiga" title="Bitte Liga wählen" style="display:@DisplayErrorLiga;color:red;" id="lblErrorLiga">Bitte Liga wählen</label>
                        </div>
                        <div class="dropdown" style="display:inline">
                            <select value="@SaisonID" id="cboSaison" class="form-control dropdown" @onchange="SaisonChange">
                                <option value="0" required>Saison auswählen</option>
                                @if (SaisonenList != null)
                                {
                                    @foreach (var saison in SaisonenList.OrderByDescending(o => o.Saisonname))
                                    {
                                        @if (saison.SaisonID == Globals.SaisonID)
                                        {
                                            <option selected value="@saison.Saisonname"> @saison.Saisonname </option>
                                        }
                                        else
                                        {
                                            <option value="@saison.Saisonname"> @saison.Saisonname </option>
                                        }
                                        
                                    }
                                }
                            </select>
                            <label for="cboSaison" style="display:@DisplayErrorSaison;color:red;" id="lblErrorSaison">Bitte Saison wählen</label>
                        </div>
                        <div class="dropdown" style="display:inline">
                            <RadzenButton title="Liga und Saison auswählen" BusyText="Bitte warten..." style="margin-left:4px;" id="btnUebernehmen" class="btn btn-primary pull-right" Text="Auswählen" Click="@OnClickHandler">
                            </RadzenButton>
                        </div>
                    </div>
                </RadzenTabsItem>
                <RadzenTabsItem Text="Import">
                    <div class="form-group row">
                        <div class="col-sm-12 ml-0">
                            <label for="formFileLg" style="display:inline-block;" title="@ImportCSV" class="form-label col-sm-12">Bitte CSV-Datei wählen</label>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-sm-6">
                            <div class="custom-file mb-3">
                                <input type="file" class="custom-file-input" id="customFile" name="filename">
                                <label class="custom-file-label" for="customFile">Datei wählen file</label>
                            </div>

                            <p>Default file:</p>
                            <input type="file" id="myFile" name="filename2">

                            <div class="mt-3">
                                <RadzenButton title="Saison importieren" id="btnImportCSV" class="btn btn-primary" Text="Saison importieren" Click="@OnClickHandlerImport">
                                </RadzenButton>
                            </div>
                        </div>
                    </div>
                </RadzenTabsItem>
                <RadzenTabsItem Text="Tabellen anlegen">
                    <div class="form-group row">
                        <div class="col-sm-12">
                            <RadzenLabel Style="font-weight:bold;">Tabellen auswählen</RadzenLabel>
                            <RadzenCheckBoxList Orientation="Orientation.Vertical" @bind-Value=@values Change="@(args => ValidateItems(args))" TValue="int">
                                <Items>
                                    <RadzenCheckBoxListItem Disabled Text="Ligen" Value="1" />
                                    <RadzenCheckBoxListItem Disabled Text="Saisonen" Value="2" />
                                    <RadzenCheckBoxListItem Disabled Text="Vereine" Value="3" />
                                    <RadzenCheckBoxListItem Disabled Text="Vereine Saison" Value="4" />
                                    <RadzenCheckBoxListItem Disabled Text="Spieltage" Value="5" />
                                    <RadzenCheckBoxListItem id="chkKader" Text="Kader" Value="6" />
                                    <RadzenCheckBoxListItem id="Spieler" Text="Spieler" Value="7" />
                                    <RadzenCheckBoxListItem id="SpielerSpieltag" Text="Spieler Spieltag" Value="8" />
                                    <RadzenCheckBoxListItem id="chkTore" Text="Tore" Value="9" />
                                    <RadzenCheckBoxListItem Disabled id="chkPokalergebnisse" Text="Pokalergebnisse" Value="10" />
                                </Items>
                            </RadzenCheckBoxList>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-sm-12">
                            <RadzenButton title="Datenbank mit ausgewählten Tabellen anlegen" id="btnGenerateDataBase" class="btn btn-primary" Text="Datenbank anlegen" Click="@GenerateDataBase">
                            </RadzenButton>
                        </div>
                    </div>
                </RadzenTabsItem>
            </Tabs>
        </RadzenTabs>
    </RadzenCard>
</div>

<script>
    $(document).ready(function () {
        $('.custom-file-input').on("change", function () {
            var fileName = $(this).val().split("\\").pop();
            $(this).next('.custom-file-label').html(fileName);
        });
    });

    $(".custom-file-input").on("change", function () {
        var fileName = $(this).val().split("\\").pop();
        $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
    });
</script>

@code {

    AlignItems alignItems = AlignItems.Normal;
    JustifyContent justifyContent = JustifyContent.Normal;
    string gap = "1rem";

    class MyObject
    {
        public int Id { get; set; }
        public string Name { get; set; }

        public override bool Equals(object o)
        {
            var other = o as MyObject;

            return other?.Id == Id;
        }

        public override string ToString()
        {
            return $"Id: {Id}, Name: {Name}";
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }
    }

    MyObject singleValue = new MyObject() { Id = 5, Name = "Name5" };
    IEnumerable<MyObject> data = Enumerable.Range(0, 100).Select(i => new MyObject() { Id = i, Name = $"Name{i}" });
}
