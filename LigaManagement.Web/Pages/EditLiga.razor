@page "/createliga"
@page "/editliga/{Id}"
@using LigamanagerManagement.Web.Services.Contracts;
@inherits LigaManagerManagement.Web.Pages.LigenListBase
@inject ILigaService _Ligaservice
@inject NavigationManager _navigationManager

<div class="row my-2">
    <h2>@Titel Liga</h2>

    <div class="col-10">
        <EditForm Model="Liga" OnValidSubmit="UpsertVerein">
            <div class="form-group">
                <label>Liga</label>
                <InputText required id="txtLiganame" @bind-Value="Liga.Liganame" class="form-control"></InputText>
                <ValidationMessage For="()=>Liga.Liganame"></ValidationMessage>
            </div>
            <div class="form-group">
                <label>Verband</label>
                <InputText required id="txtVerband" @bind-Value="Liga.Verband" class="form-control"></InputText>
                <ValidationMessage For="()=>Liga.Verband"></ValidationMessage>
            </div>
            <div class="form-group">
                <label>Erstaustragung</label>
                <InputDate required id="txtErstaustragung" @bind-Value="Liga.Erstaustragung" class="form-control"></InputDate>
                <ValidationMessage For="()=>Liga.Erstaustragung"></ValidationMessage>
            </div>
            <div class="form-group">
                <label>Absteiger</label>
                <InputNumber required id="txtAbsteiger" @bind-Value="Liga.Absteiger" class="form-control"></InputNumber>
                <ValidationMessage For="()=>Liga.Absteiger"></ValidationMessage>
            </div>
            <div class="form-group">
                <label>Aktiv</label>
                <InputText required id="txtAktiv" @bind-Value="Liga.Aktiv" class="form-control"></InputText>
                <ValidationMessage For="()=>Liga.Aktiv"></ValidationMessage>
            </div>            
            <div class="form-group py-2">
                <button class="btn btn-primary">Speichern</button>
                <NavLink href="/ligen" class="btn btn-secondary">Zurück</NavLink>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public string Id { get; set; }
    private Liga Liga { get; set; } = new Liga();
    private string Titel { get; set; }
    public bool IsLoading { get; set; }
    public IEnumerable<Liga> VereineMax { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id == "0" || Id is null)
            {
                //Neuanlage
                Titel = "Neuanlage";
                Id = "0";
                IsLoading = false;
            }
            else
            {
                //Bearbeiten
                Titel = "Bearbeiten";
                await LoadLiga();
            }
        }
    }

    private async Task LoadLiga()
    {
        IsLoading = true;
        StateHasChanged();
        Liga = await _Ligaservice.GetLiga(Convert.ToInt32(Id));
        IsLoading = false;
        StateHasChanged();
    }
    private async Task UpsertVerein()
    {
        if (Id == "0")
        {                       
            VereineMax = await _Ligaservice.GetLigen();            
            Liga.Verband = "AFC";
            Liga.Erstaustragung = new DateTime(1924, 7, 1);
            Liga.Absteiger = 4;
            Liga.Aktiv = "1";
            await _Ligaservice.CreateLiga(Liga);
        }
        else
        {
            //update
            await _Ligaservice.UpdateLiga(Liga);
        }
        _navigationManager.NavigateTo("ligen");
    }
}
