@page "/update"
@using LigaManagerManagement.Web.Pages;
@using System.Reflection;  
@using System.Globalization
@using System.IO;
@using Radzen;

@attribute [Authorize]
@inject NavigationManager _navigationManager

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
</head>

<script>
    function scrollToTop() {
        window.scrollTo(0, 0);
    }
</script>

<style>
    body {
        font-family: Arial, Helvetica, sans-serif;
        margin: 0;
    }

    html {
        box-sizing: border-box;
    }

    *, *:before, *:after {
        box-sizing: inherit;
    }

    .column {
        float: left;
        width: 100.0%;
        margin-bottom: 16px;
        padding: 0 8px;
    }

    .card {
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
        margin: 8px;
    }

    .about-section {
        padding: 50px;
        text-align: center;
        background-color: #474e5d;
        color: white;
    }

    .container {
        padding: 0 16px;
    }

        .container::after, .row::after {
            content: "";
            clear: both;
            display: table;
        }

    .title {
        color: grey;
    }



    .button:hover {
        background-color: #555;
    }

    @@media screen and (max-width: 650px) {
        .column {
            width: 100%;
            display: block;
        }
    }

    .center-block {
        display: block;
        margin-left: auto;
        margin-right: auto;
    }
</style>

<div class="container">
    <div class="form-group row">
        <div class="col-sm-12">
            <RadzenCard class="m-0">
                <div class="d-flex flex-row">
                    <div class="card-body">
                        <h2 style="display:inline-block;">Update Ligamanager</h2>                      
                    </div>
                </div>
            </RadzenCard>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-12">
            <p Text="Tabellen anlegen">
                <div class="form-group row">
                    <div class="col-sm-12">
                        <RadzenLabel class="form-control col-sm-2" Component="txtDownloadURL" Text="Download-URL:"></RadzenLabel>
                        <RadzenText class="form-control col-sm-10" Text="@DownloadURL" id="txtUrl"></RadzenText>

                        <RadzenLabel class="form-control col-sm-2" Component="txtFilenameDownload" Text="Dateiname Download:"></RadzenLabel>
                        <RadzenText class="form-control col-sm-10" Text="@FilenameDownload" id="txtVersion"></RadzenText>

                        <RadzenLabel class="form-control col-sm-2"  Component="txtVersion" Text="aktuelle Version:"></RadzenLabel>
                        <RadzenText class="form-control col-sm-10" Text="@Aktversion" id="txtVersion"></RadzenText>
                        
                        <br />
                        <linkbutton title="Updatecheck" style="margin-left:2px;" onclick="CheckUpdate" id="btnCheckUpdate" class="btn btn-primary">
                           Update-Check
                        </linkbutton>
                        <linkbutton title="Anwendung updaten" style="margin-left:2px;" onclick="Updater" id="btnUpdate" class="btn btn-primary">
                            Anwendung updaten
                        </linkbutton>

                        <RadzenText class="form-control col-sm-10" style="margin-left:2px;" hidden="updateResult" Text="@ResultTest" id="txtVersion"></RadzenText>

                    </div>
                </div>
            </p>
        </div>
    </div>
</div>


@code {
    protected string DisplayUpdater = "block";
    protected string DisplayResultText = "none";
    protected string ResultText = "block";
    protected string ResultTest;
    public string DownloadURL;
    public string FilenameDownload;
    public string Aktversion;
    public const string updaterPrefix = "M1234_";
    public static string StartupPath = Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().Location);
    private static string processToEnd = "UpdateLigamanager";
    private static string postProcess = StartupPath + @"\" + processToEnd + ".exe";
    public static string updater = StartupPath + @"\update.exe";

    public const string updateSuccess = "UpdateLigamanager wurde erfolgreich upgedated";
    public const string updateCurrent = "keine Update für UpdateLigamanager verfügbar";
    public const string updateInfoError = "Fehler beim Ermitteln der UpdateLigamanager Informationen";


    public static List<string> info = new List<string>();

    // public async void OnClickHandler()
    // {
    // }

    protected override async Task OnInitializedAsync()
    {        
        System.Reflection.Assembly assembly = System.Reflection.Assembly.GetExecutingAssembly();
        System.Diagnostics.FileVersionInfo fvi = System.Diagnostics.FileVersionInfo.GetVersionInfo(assembly.Location);
        FilenameDownload = fvi.FileName;
        Aktversion = fvi.FileVersion;
        DownloadURL = fvi.FileDescription;

        Globals.bVisibleNavMenuElements = true;
    }

    protected void Updater()
    {

        LigaManager.Update.update.installUpdateRestart(info[3], info[4], "\"" + StartupPath + "\\", processToEnd, postProcess, "updated", updater);

    }

    protected void CheckUpdate()
    {


        info = LigaManager.Update.update.getUpdateInfo(DownloadURL, FilenameDownload, StartupPath + @"\", 1);

        if (info == null)
        {

            DisplayUpdater = "none";
            // updateResult.Text = updateInfoError;
            // updateResult.Visible = true;

        }
        else
        {

            if (decimal.Parse(info[1]) > decimal.Parse(Aktversion))
            {

                DisplayUpdater = "block";
                DisplayResultText = "none";

            }
            else
            {

                DisplayUpdater = "none";
                DisplayResultText = "block";
                ResultTest = updateCurrent;

            }
        }
    }
   
}



