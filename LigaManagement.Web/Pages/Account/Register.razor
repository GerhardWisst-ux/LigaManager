@page "/Ligamanager/account/register"
@using LigaManagement.Api.Models
@using Microsoft.Extensions.Localization
@using LigaManagement.Web.Services.Contracts
@inject LigaManagerManagement.Web.Services.LigaManagerAuthenticationStateProvider LigaManagerAuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IStringLocalizer<Register> Localizer

<div class="card">
    <h4 class="card-header">@Localizer["Registrieren"].Value</h4>
    <div class="card-body">
        <EditForm autocomplete="off" Model="@modelReg" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>@Localizer["Benutzername"].Value</label>
                <InputText id="regUsername" name ="regUsername" @bind-Value ="modelReg.Username" autocomplete="off" class="form-control" />
                <ValidationMessage For="@(() => modelReg.Username)" />
            </div>
            <div class="form-group">
                <label>@Localizer["Passwort"].Value</label>
                <InputText id="regPasswort" name="regPasswort" @bind-Value="modelReg.Password" autocomplete="off" type="password" class="form-control" />
                <ValidationMessage For="@(() => modelReg.Password)" />
            </div>
            <div class="form-group">
                <label>@Localizer["Vorname"].Value</label>
                <InputText @bind-Value="modelReg.FirstName" class="form-control" />
                <ValidationMessage For="@(() => modelReg.FirstName)" />
            </div>
            <div class="form-group">
                <label>@Localizer["Nachname"].Value</label>
                <InputText @bind-Value="modelReg.LastName" class="form-control" />
                <ValidationMessage For="@(() => modelReg.LastName)" />
            </div>
            <div class="form-group">
                <label>@Localizer["Ort"].Value</label>
                <InputText @bind-Value="modelReg.Location" class="form-control" />
                <ValidationMessage For="@(() => modelReg.Location)" />
            </div>
            <div class="form-group">
                <label>@Localizer["Mail"].Value</label>
                <InputText @bind-Value="modelReg.Mail" class="form-control" />
                <ValidationMessage For="@(() => modelReg.Mail)" />
            </div>
            <button disabled="@loading" class="btn btn-primary">
                @if (loading)
                {
                    <span class="spinner-border spinner-border-sm mr-1"></span>
                }
                @Localizer["Registrieren"].Value
            </button>
            <NavLink href="Ligamanager/account/login" class="btn btn-link">@Localizer["Abbrechen"].Value</NavLink>
        </EditForm>
    </div>
</div>

@code {
    User modelReg = new User();

    private bool loading;

    // [Inject]
    // public IUserService UserService { get; set; }

    private async void OnValidSubmit()
    {
        // reset alerts on submit
        //AlertService.Clear();

        loading = true;
        try
        {
            // var user = UserService.CreateUser(model);
            // AlertService.Success("Registration successful", keepAfterRouteChange: true);
            NavigationManager.NavigateTo("Ligamanager/account/login");
        }
        catch (Exception ex)
        {
            //AlertService.Error(ex.Message);
            loading = false;
            StateHasChanged();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        modelReg.Username = "";
        modelReg.Password = "";

         StateHasChanged();
    }
}