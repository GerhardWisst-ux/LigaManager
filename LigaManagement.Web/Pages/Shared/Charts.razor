@page "/charts"
@using LigaManagerManagement.Web.Pages;
@using System.Globalization

@* @inherits ChartsListBase
@attribute [Authorize]

@{
    string chartTitle = "Chart Vfb Stuttgart";
    string chartspiele = "Spiele";
    string chartpunkte = "Punkte";
}

<!DOCTYPE html>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<html>
<body>
    <div class="container-fluid">
        <div class="form-group row">
            <div class="col-sm-12">
                <RadzenCard class="m-0">
                    <div class="d-flex flex-row">
                        <div class="card-body">
                            <h2 style="display:inline-block;">Chart</h2>
                        </div>
                    </div>
                </RadzenCard>
            </div>
        </div>
        @if (SaisonenList != null)
        {
            <RadzenCard style="margin-bottom:4px;">
                <div class="form-group row">
                    <div class="dropdown mr-2" style="display:inline">
                        <select id="cboSaison" style="display:inline;max-width:170px;height:38px; margin-left:2px; margin-right:2px;" class="form-control dropdown" @onchange="SaisonChange">
                            <option value="0" selected="selected">Saison auswählen</option>
                            @foreach (var saison in SaisonenList.OrderByDescending(o => o.Saisonname))
                            {
                                @if (saison.SaisonID == Globals.SaisonID)
                                {
                                    <option selected value="@saison.SaisonID"> @saison.Saisonname </option>
                                }
                                else
                                {
                                    <option value="@saison.SaisonID"> @saison.Saisonname </option>
                                }
                            }
                        </select>
                        <label title="Bitte Saison wählen" style="display:@DisplayErrorSaison;color:red;" id="lblErrorLiga">Bitte Saison wählen</label>
                    </div>
                    <div class="dropdown" style="display:inline">
                        <select id="cboVerein" style="display:inline;max-width:170px;height:38px; margin-left:2px; margin-right:2px;" class="form-control dropdown col-sm-10" @onchange="VereinChange">
                            <option value="0" selected="selected">Verein auswählen</option>
                            @foreach (var verein in VereineList.OrderBy(x => x.Vereinname1))
                            {
                                @if (Convert.ToInt32(verein.VereinID) == ChartVereinNr)
                                {
                                    <option selected value="@verein.VereinID"> @verein.Vereinname1 </option>
                                }
                                else
                                {
                                    <option value="@verein.VereinID"> @verein.Vereinname1 </option>
                                }

                            }
                        </select>
                        <label title="Bitte Verein wählen" style="display:@DisplayErrorVerein;color:red;" id="lblErrorVerein">Bitte Verein wählen</label>
                    </div>
                    <div class="dropdown" style="display:inline">
                        <select id="cboChartArt" style="display:inline; max-width:180px;height:38px;margin-left:2px;" class="form-control dropdown" @onchange="ChartArtChange">
                            <option value="0">Chartart wählen</option>
                            <option selected value="1">Punkte</option>
                            <option value="2">Platz</option>
                        </select>
                        <label title="Bitte Chartart wählen" style="display:@DisplayErrorChartArt;color:red;" id="lblErrorLiga">Bitte Chartart wählen</label>
                    </div>
                    <div class="dropdown" style="display:inline">
                        <RadzenButton title="Liga und Saison auswählen" BusyText="Bitte warten..." style="margin-left:4px;" id="btnChoose" class="btn btn-primary pull-right" Text="Auswählen" Click="@OnClickHandler">
                        </RadzenButton>
                    </div>
                </div>
            </RadzenCard>
        }
    </div>
    <div id="myChart" style="width:100%; max-width:600px; height:500px;"></div>

    <script>
        google.charts.load('current', { packages: ['corechart', 'line'] });
        google.charts.setOnLoadCallback(drawBasic);

        function drawBasic() {

            var data = new google.visualization.DataTable();
            data.addColumn('number', 'Spiele');
            data.addColumn('number', 'Punkte');


            data.addRows([
        @arrPunkte
                            ]);

            var options = {
                hAxis: {
                    title: 'Spiele'
                },
                vAxis: {
                    title: 'Punkte'
                }
            };

            var chart = new google.visualization.LineChart(document.getElementById('myChart'));

            chart.draw(data, options);
        }
    </script>


</body>
</html>

 *@
<div class="container">
    <div class="row">
        <div class="col-sm-12 my-5">
            <RadzenCard class="w-100 mb-4" Style="display: flex; align-items: center; gap: 0.5rem">
                <RadzenCheckBox @bind-Value="@smooth" Name="smooth"></RadzenCheckBox>
                <RadzenLabel Text="Smooth" Component="smooth" Style="margin-right: 1rem;" />
                <RadzenCheckBox @bind-Value="@showDataLabels" Name="dataLabels"></RadzenCheckBox>
                <RadzenLabel Text="Show Data Labels" Component="dataLabels" Style="margin-right: 1rem;" />
                <RadzenCheckBox @bind-Value="@showMarkers" Name="markers"></RadzenCheckBox>
                <RadzenLabel Text="Show Markers" Component="markers" />
            </RadzenCard>
            <RadzenChart>
                <RadzenLineSeries Smooth="@smooth" Data="@revenue2023" CategoryProperty="Date" Title="2023" LineType="LineType.Dashed" ValueProperty="Revenue">
                    <RadzenMarkers Visible="@showMarkers" MarkerType="MarkerType.Square" />
                    <RadzenSeriesDataLabels Visible="@showDataLabels" />
                </RadzenLineSeries>
                <RadzenLineSeries Smooth="@smooth" Data="@revenue2024" CategoryProperty="Date" Title="2024" ValueProperty="Revenue">
                    <RadzenMarkers Visible="@showMarkers" MarkerType="MarkerType.Circle" />
                    <RadzenSeriesDataLabels Visible="@showDataLabels" />
                </RadzenLineSeries>
                <RadzenCategoryAxis Padding="20" />
                <RadzenValueAxis Formatter="@FormatAsUSD">
                    <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle Text="Revenue in USD" />
                </RadzenValueAxis>
            </RadzenChart>
        </div>
    </div>
</div>

@code {
    bool smooth = false;
    bool showDataLabels = false;
    bool showMarkers = true;

    class DataItem
    {
        public string Date { get; set; }
        public double Revenue { get; set; }
    }

    string FormatAsUSD(object value)
    {
        return ((double)value).ToString("C0", CultureInfo.CreateSpecificCulture("en-US"));
    }

    DataItem[] revenue2023 = new DataItem[] {
        new DataItem
        {
            Date = "Jan",
            Revenue = 234000
        },
        new DataItem
        {
            Date = "Feb",
            Revenue = 269000
        },
        new DataItem
        {
            Date = "Mar",
            Revenue = 233000
        },
        new DataItem
        {
            Date = "Apr",
            Revenue = 244000
        },
        new DataItem
        {
            Date = "May",
            Revenue = 214000
        },
        new DataItem
        {
            Date = "Jun",
            Revenue = 253000
        },
        new DataItem
        {
            Date = "Jul",
            Revenue = 274000
        },
        new DataItem
        {
            Date = "Aug",
            Revenue = 284000
        },
        new DataItem
        {
            Date = "Sept",
            Revenue = 273000
        },
        new DataItem
        {
            Date = "Oct",
            Revenue = 282000
        },
        new DataItem
        {
            Date = "Nov",
            Revenue = 289000
        },
        new DataItem
        {
            Date = "Dec",
            Revenue = 294000
        }
    };

    DataItem[] revenue2024 = new DataItem[] {
        new DataItem
        {
            Date = "Jan",
            Revenue = 334000
        },
        new DataItem
        {
            Date = "Feb",
            Revenue = 369000
        },
        new DataItem
        {
            Date = "Mar",
            Revenue = 333000
        },
        new DataItem
        {
            Date = "Apr",
            Revenue = 344000
        },
        new DataItem
        {
            Date = "May",
            Revenue = 314000
        },
        new DataItem
        {
            Date = "Jun",
            Revenue = 353000
        },
        new DataItem
        {
            Date = "Jul",
            Revenue = 374000
        },
        new DataItem
        {
            Date = "Aug",
            Revenue = 384000
        },
        new DataItem
        {
            Date = "Sept",
            Revenue = 373000
        },
        new DataItem
        {
            Date = "Oct",
            Revenue = 382000
        },
        new DataItem
        {
            Date = "Nov",
            Revenue = 389000
        },
        new DataItem
        {
            Date = "Dec",
            Revenue = 394000
        }
    };
}}