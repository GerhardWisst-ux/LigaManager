@page "/createsaison"
@inherits LigaManagerManagement.Web.Pages.SaisonenListBase
@inject LigaManagement.Web.Services.Contracts.ISaisonenService _SaisonenService
@inject LigaManagement.Web.Services.Contracts.IVereineSaisonService _VereineSaisonService

@inject DialogService DialogService
@inject NavigationManager _navigationManager

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
</head>

<EditForm Model="Saison" OnValidSubmit="SaveSaison">
    <RadzenSteps Change="@OnChange" CanChange="@CanChange">
        <Steps>
            <RadzenStepsItem PreviousText="Voriger Schritt" NextText="Nächster Schritt">
                <RadzenRow>
                    <RadzenLabel Text="Grunddaten" class="col-sm-3 pl-0">Grunddaten</RadzenLabel>
                </RadzenRow>
                <br />
                <br />
                <div class="form-group">
                    @if (Id == null)
                    {
                        <RadzenLabel Text="Saisonname" class="col-sm-3 pl-0" Component="txtSaisonname">Saisonname</RadzenLabel>
                        <RadzenTextBox required name="txtSaisonname" id="txtSaisonname" @bind-Value="Saison.Saisonname" class="form-control col-9"></RadzenTextBox>
                    }
                    else
                    {
                        <RadzenLabel Text="Saisonname" class="col-sm-3 pl-0" Component="txtSaisonnameDisabled">Saisonname</RadzenLabel>
                        <RadzenTextBox required name="txtSaisonnameDisabled" id="txtSaisonnameDisabled" @bind-Value="Saison.Saisonname" class="form-control col-9"></RadzenTextBox>
                    }
                    <ValidationMessage For="()=>Saison.Saisonname"></ValidationMessage>
                </div>
                <div class="form-group">
                    @if (Id == null)
                    {
                        <RadzenLabel Text="Liganame" class="col-sm-3 pl-0" Component="cboLiga">Liganame</RadzenLabel>
                        <select id="cboLiga" name="cboLiga" class="form-control col-9 dropdown" @onchange="LigaChange">
                            <option value="@Convert.ToInt32(Globals.currentLiga)">@Liganame</option>
                            @if (LigenList != null)
                            {
                                @foreach (var liga in LigenList.OrderBy(o => o.LigaID))
                                {
                                    <option value="@liga.LigaID"> @liga.Liganame</option>
                                }
                            }
                        </select>
                    }
                    else
                    {
                        <RadzenLabel Text="Liganame" class="col-sm-3 pl-0" Component="cboLigaDisabled">Liganame</RadzenLabel>
                        <select id="cboLigaDisabled" name="cboLigaDisabled" class="form-control col-9 dropdown" @onchange="LigaChange">
                            <option value="@Convert.ToInt32(Globals.currentLiga)">@Liganame</option>
                            @if (LigenList != null)
                            {
                                @foreach (var liga in LigenList.OrderBy(o => o.LigaID))
                                {
                                    <option value="@liga.LigaID"> @liga.Liganame</option>
                                }
                            }
                        </select>
                    }
                    <label title="Bitte Liga wählen" style="display:@DisplayErrorLiga;color:red;" id="lblErrorLiga">Bitte Liga wählen</label>
                </div>
                <div class="form-group">
                    <RadzenLabel Text="Aktuell" class="col-sm-3 pl-0" Component="chkAktiv">Aktuell</RadzenLabel>
                    <RadzenCheckBox @bind-Value="Saison.Aktuell" Style="border-width:0px;width:40px;max-width:40px;" class="form-control col-sm-1" Name="chkAktiv" />
                    <RadzenColumn Size="8" Offset="4" class="rz-white rz-p-5">
                    </RadzenColumn>
                    <ValidationMessage For="()=>Saison.Aktuell"></ValidationMessage>
                </div>

                <div class="form-group">
                    <RadzenLabel Text="Abgeschlossen" class="col-sm-3 pl-0" Component="chkAbgeschlossen">Abgeschlossen</RadzenLabel>
                    <RadzenCheckBox @bind-Value="Saison.Abgeschlossen" Style="border-width:0px; width:40px;max-width:40px;" class="form-control col-sm-9" Name="chkAbgeschlossen" />
                    <RadzenColumn Size="8" Offset="4" class="rz-white rz-p-5">
                    </RadzenColumn>
                    <ValidationMessage For="()=>Saison.Abgeschlossen"></ValidationMessage>
                </div>
                <RadzenButton Text="Speichern" Click="@SaveGrunddaten" />
            </RadzenStepsItem>
            <RadzenStepsItem PreviousText="Voriger Schritt" NextText="Nächster Schritt">
                <RadzenRow>
                    <RadzenRow>
                        <RadzenLabel Text="Vereine zuordnen" class="col-sm-3 pl-0">Vereine zuordnen</RadzenLabel>
                    </RadzenRow>
                    <br />
                    <br />
                </RadzenRow>
                <div class="form-group">
                    <ul class="ul">
                        @foreach (var verein in VereineList.OrderBy(x => x.VereinID))
                        {
                            string Id = @verein.VereinID;
                            <li><input @onchange="eventArgs => { CheckboxClicked(Id, eventArgs.Value); }" name="checkverein" checked="@verein.VereinChecked" data-bind=" @verein.VereinID" class="col-sm-2" type="checkbox"><span>@verein.Vereinname1</span></li>
                        }
                    </ul>
                </div>
                <div class="form-group">
                    <ul class="ul">
                        @foreach (var verein in VereineSaisonList.OrderBy(x => x.VereinID))
                        {
                            string Id = @verein.VereinID;
                            <li><input data-bind="@verein.VereinID" class="col-sm-4" type="checkbox"><span>@verein.Vereinname1</span></li>
                        }
                    </ul>
                </div>
                <RadzenButton Text="Speichern" Click="@SaveVereine" />
            </RadzenStepsItem>
            <RadzenStepsItem PreviousText="Voriger Schritt" NextText="Nächster Schritt">
                <RadzenRow>
                    <RadzenLabel Text="Zusammenfassung" class="col-sm-3 pl-0">Zusammenfassung</RadzenLabel>
                </RadzenRow>
                <br />
                <br />
                <div class="form-group">
                    <RadzenLabel Text="Saisonname" class="col-sm-3 pl-0" Component="txtSaisonname">Saisonname</RadzenLabel>
                    <RadzenTextBox required name="txtSaisonname" id="txtSaisonname" @bind-Value="Saison.Saisonname" class="form-control col-9"></RadzenTextBox>

                    <ValidationMessage For="()=>Saison.Saisonname"></ValidationMessage>
                </div>
                <div class="form-group">
                    <RadzenLabel Text="Liganame" class="col-sm-3 pl-0" Component="cboLigaDisabled">Liganame</RadzenLabel>
                    <select id="cboLiga" name="cboLiga" class="form-control col-9 dropdown" @onchange="LigaChange">
                        <option value="@Convert.ToInt32(Globals.currentLiga)">@Liganame</option>
                        @if (LigenList != null)
                        {
                            @foreach (var liga in LigenList.OrderBy(o => o.LigaID))
                            {
                                <option value="@liga.LigaID"> @liga.Liganame</option>
                            }
                        }
                    </select>

                    <label title="Bitte Liga wählen" style="display:@DisplayErrorLiga;color:red;" id="lblErrorLiga">Bitte Liga wählen</label>
                </div>
                <div class="form-group">
                    <RadzenLabel Text="Aktuell" class="col-sm-3 pl-0" Component="chkAktiv">Aktuell</RadzenLabel>
                    <RadzenCheckBox @bind-Value="Saison.Aktuell" Style="border-width:0px;width:40px;max-width:40px;" class="form-control col-sm-1" Name="chkAktiv" />
                    <RadzenColumn Size="8" Offset="4" class="rz-white rz-p-5">
                    </RadzenColumn>
                    <ValidationMessage For="()=>Saison.Aktuell"></ValidationMessage>
                </div>

                <div class="form-group">
                    <RadzenLabel Text="Abgeschlossen" class="col-sm-3 pl-0" Component="chkAbgeschlossen">Abgeschlossen</RadzenLabel>
                    <RadzenCheckBox @bind-Value="Saison.Abgeschlossen" Style="border-width:0px; width:40px;max-width:40px;" class="form-control col-sm-9" Name="chkAbgeschlossen" />
                    <RadzenColumn Size="8" Offset="4" class="rz-white rz-p-5">
                    </RadzenColumn>
                    <ValidationMessage For="()=>Saison.Abgeschlossen"></ValidationMessage>
                </div>
                <RadzenRow>
                    <RadzenLabel Text="Vereine" class="col-sm-3 pl-0">Vereine</RadzenLabel>
                </RadzenRow>
                <div class="form-group">
                    <ul class="ul">
                        @foreach (var verein in vereinesaisonSelectedZus.OrderBy(x => x.Id))
                        {
                            int Id = @verein.Id;
                            <li><input data-bind=" @verein.Id" class="col-sm-12" checked="checked" type="checkbox"><span>@verein.Vereinsname1</span></li>
                        }
                    </ul>
                </div>
                <RadzenButton Text="Speichern" id="btnSaveSaison" Click="@SaveSaison" />
            </RadzenStepsItem>
        </Steps>
    </RadzenSteps>
</EditForm>
@code {
    public string Titel { get; set; }
    public bool IsLoading { get; set; }
    private string saison;
    private string savedSaison;

    private string liganame;
    private string savedliganame;

    private string aboutMe;
    private string savedAboutMe;

    public List<Verein> vereinesaisonSelectedZus = new List<Verein>();

    private void OnChange()
    {
        saison = savedSaison;
        liganame = savedliganame;

    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id == null)
            {
                //Neuanlage
                Id = "0";
                IsLoading = false;
            }
            else
            {
                //Bearbeiten
                await LoadSaison();
            }
        }
    }

    private async Task LoadSaison()
    {
        IsLoading = true;
        StateHasChanged();
        Saison = await _SaisonenService.GetSaison(Convert.ToInt32(Id));
        IsLoading = false;
        StateHasChanged();
    }

    private async Task CanChange(StepsCanChangeEventArgs args)
    {
        if (args.SelectedIndex == 0 && liganame == null || saison == null)
        {
            // var response = await DialogService.Confirm(
            //     "Sie haben keinen Saisonnamen oder keinen Liganamen ausgewählt!",
            //     "Trotzdem weitermachen",
            //     new ConfirmOptions()
            //         {
            //             CloseDialogOnEsc = false,
            //             CloseDialogOnOverlayClick = false,
            //             ShowClose = false,
            //             CancelButtonText = "Nein",
            //             OkButtonText = "Ja",
            //         });

            // if (response == false)
            // {
            //     args.PreventDefault();
            // }

            return;
        }

        if (args.SelectedIndex == 1 && vereinesaison.Count() != 18)
        {
            // var response = await DialogService.Confirm(
            //     "Sie haben keine 18 Vereine ausgewählt!",
            //     "Trotzdem weitermachen",
            //     new ConfirmOptions()
            //         {
            //             CloseDialogOnEsc = false,
            //             CloseDialogOnOverlayClick = false,
            //             ShowClose = false,
            //             CancelButtonText = "Nein",
            //             OkButtonText = "Ja",
            //         });

            // if (response == false)
            // {
            //     args.PreventDefault();
            // }
            return;
        }

        if (args.SelectedIndex == 1 && vereinesaisonSelected.Count() != 18)
        {
            // var response = await DialogService.Confirm(
            //     "Sie haben keine 18 Vereine ausgewählt!",
            //     "Trotzdem weitermachen",
            //     new ConfirmOptions()
            //         {
            //             CloseDialogOnEsc = false,
            //             CloseDialogOnOverlayClick = false,
            //             ShowClose = false,
            //             CancelButtonText = "Nein",
            //             OkButtonText = "Ja",
            //         });

            // if (response == false)
            // {
            //     args.PreventDefault();
            // }
            return;
        }

        // var response = await DialogService.Confirm(
        //     "Are you sure you want to contine without saving?",
        //     "Confirm",
        //     new ConfirmOptions()
        //         {
        //             CloseDialogOnEsc = false,
        //             CloseDialogOnOverlayClick = false,
        //             ShowClose = false,
        //             CancelButtonText = "No",
        //             OkButtonText = "Yes",
        //         });

        // if (response == false)
        // {
        //     args.PreventDefault();
        // }
    }

    private void SaveGrunddaten()
    {
        savedSaison = saison;
        savedliganame = liganame;
    }

    private void SaveVereine()
    {
        vereinesaisonSelectedZus = vereinesaisonSelected;
        vereinesaisonSelected = null;
    }

    private async void SaveSaison()
    {
        LigaManagerManagement.Models.Saison SaisonenServiceCreated;
        Saison.LigaID = Convert.ToInt32(Globals.currentLiga);

        var liga = await LigaService.GetLiga(Convert.ToInt32(Globals.currentLiga));
        Saison.Liganame = liga.Liganame;

        SaisonenServiceCreated = await _SaisonenService.CreateSaison(Saison);

        List<VereineSaison> lstVereineSaison = new List<VereineSaison>();

        var Saisonen = await SaisonenService.GetSaisonen();

        var Saison2 = Saisonen.Where(x => x.Saisonname == Saison.Saisonname).FirstOrDefault();

        for (int i = 0; i < vereinesaisonSelectedZus.Count - 1; i++)
        {
            VereineSaison item = new VereineSaison();

            item.Id = i + 1;
            item.VereinNr = vereinesaisonSelectedZus[i].VereinNr;
            item.SaisonID = Saison2.SaisonID;
            item.LigaID = Convert.ToInt32(Globals.currentLiga);
            lstVereineSaison.Add(item);
        }

        await _VereineSaisonService.CreateVereineSaison(lstVereineSaison);

        _navigationManager.NavigateTo("saisonen");
    }
}


