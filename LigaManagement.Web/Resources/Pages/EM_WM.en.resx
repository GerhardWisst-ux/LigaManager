<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Achtelfinale" xml:space="preserve">
    <value>Round of 16</value>
  </data>
  <data name="Alle EM-Endspiele" xml:space="preserve">
    <value>All EM-Finals</value>
  </data>
  <data name="Auswählen" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="Bearbeiten" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Begegnungen" xml:space="preserve">
    <value>Matches</value>
  </data>
  <data name="Datum" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Elfmeterschiessen" xml:space="preserve">
    <value>Peanalty shootout</value>
  </data>
  <data name="Finale" xml:space="preserve">
    <value>Final</value>
  </data>
  <data name="Gast" xml:space="preserve">
    <value>Away</value>
  </data>
  <data name="Gruppenphase Spieltag" xml:space="preserve">
    <value>Group phase matchday</value>
  </data>
  <data name="Halbfinale" xml:space="preserve">
    <value>Semi final</value>
  </data>
  <data name="Heim" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Löschen" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Mannschaft wählen" xml:space="preserve">
    <value>Select team</value>
  </data>
  <data name="Nach oben" xml:space="preserve">
    <value>Goto to Top</value>
  </data>
  <data name="Neuanlage EM-Spiel" xml:space="preserve">
    <value>Create new EM-Match</value>
  </data>
  <data name="Ort" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Runde wählen" xml:space="preserve">
    <value>Select round</value>
  </data>
  <data name="Saison wählen" xml:space="preserve">
    <value>Select saison</value>
  </data>
  <data name="Schiedrichter" xml:space="preserve">
    <value>Referee</value>
  </data>
  <data name="Speichern" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Speichert Spiel ab" xml:space="preserve">
    <value>Saves match</value>
  </data>
  <data name="Spiel Bearbeiten" xml:space="preserve">
    <value>Edit Match</value>
  </data>
  <data name="Spiel um Platz 3" xml:space="preserve">
    <value>3rd place match</value>
  </data>
  <data name="Tabelle Gruppe" xml:space="preserve">
    <value>Table group</value>
  </data>
  <data name="Tore 1" xml:space="preserve">
    <value>Goals 1</value>
  </data>
  <data name="Tore 2" xml:space="preserve">
    <value>Goals 2</value>
  </data>
  <data name="Turnier wählen" xml:space="preserve">
    <value>Select tournament</value>
  </data>
  <data name="Verein 1" xml:space="preserve">
    <value>Club 1</value>
  </data>
  <data name="Verein 2" xml:space="preserve">
    <value>Club 2</value>
  </data>
  <data name="Vereine EMWM" xml:space="preserve">
    <value>Clubs EM-WM</value>
  </data>
  <data name="Verlängerung" xml:space="preserve">
    <value>Extension</value>
  </data>
  <data name="Viertelfinale" xml:space="preserve">
    <value>Quarter final</value>
  </data>
  <data name="Zurück zu Übersicht EMWM" xml:space="preserve">
    <value>Back to List of EMWM</value>
  </data>
  <data name="Zuschauer" xml:space="preserve">
    <value>Spectators</value>
  </data>
</root>